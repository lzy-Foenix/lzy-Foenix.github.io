{"tags":[{"name":"莫比乌斯反演","permalink":"http://lzy-foenix.github.io/tags/莫比乌斯反演/","url":"\\async\\tags\\莫比乌斯反演.json","count":6}],"categories":[{"name":"数学","permalink":"http://lzy-foenix.github.io/categories/数学/","url":"\\async\\categories\\数学.json","count":24}],"url":"\\async\\posts\\2015\\04\\09\\BZOJ-3930-CQOI2015-选数.json","date":1428532267000,"path":{"year":2015,"month":4,"day":9,"name":"BZOJ-3930-CQOI2015-选数"},"title":"BZOJ-3930[CQOI2015]选数","permalink":"http://lzy-foenix.github.io/2015/04/09/BZOJ-3930-CQOI2015-选数/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>这道题被lawyer大神分分钟水过了，蒟蒻改了半天才过<del>虽然我的方法比大神的快了25倍，不要在意这些细节</del>。<br>可以看出来<br>$$Ans=\\sum_{i1}^{R} \\sum_{i2}^{R}\\cdot \\cdot\\cdot\\sum_{in}^{R}[Gcd(i1,i2\\cdot\\cdot\\cdot in)=k]$$<br>$$Ans=\\sum_{i1}^{\\frac{R}{k}} \\sum_{i2}^{\\frac{R}{k}}\\cdot \\cdot\\cdot\\sum_{in}^{\\frac{R}{k}}[Gcd(i1,i2\\cdot\\cdot\\cdot in)=1]$$<br>那么我们令$$f(x)=\\sum_{i1}^{\\frac{R}{k}} \\sum_{i2}^{\\frac{R}{k}}\\cdot \\cdot\\cdot\\sum_{in}^{\\frac{R}{k}}[Gcd(i1,i2\\cdot\\cdot\\cdot in)=x]$$<br>$$f(x)=\\sum_{x|d}^{R}\\mu(\\frac{d}{x})\\cdot F(d)$$<br>接着令<br>$$F(x)=\\sum_{i1}^{\\frac{R}{k}} \\sum_{i2}^{\\frac{R}{k}}\\cdot \\cdot\\cdot\\sum_{in}^{\\frac{R}{k}}[x|Gcd(i1,i2\\cdot\\cdot\\cdot in)]$$<br>$$F(x)=\\sum_{i1}^{\\frac{R}{k\\cdot x}} \\sum_{i2}^{\\frac{R}{k\\cdot x}}\\cdot \\cdot\\cdot\\sum_{in}^{\\frac{R}{k\\cdot  x}}[1|Gcd(i1,i2\\cdot\\cdot\\cdot in)]$$<br>$$F(x)=[\\frac{R}{k\\cdot x} - \\frac{L-1}{k\\cdot x}]^{n}$$<br>$$Ans=f(1)=\\sum_{d}^{R}\\mu(d)\\cdot F(d)$$<br>$$Ans=f(1)=\\sum_{d}^{R}\\mu(d)\\cdot [\\frac{R}{k\\cdot d} - \\frac{L-1}{k\\cdot d}]^{n}$$<br>但是这样求是O(n)的，所以会跪的稀里哗啦= =，所以我们可以得出$[\\frac{R}{k\\cdot d} - \\frac{L-1}{k\\cdot d}]^{n}$经常等于0，所以我们把=0的部分跳过去，光计算Pow(上式)不等于0的,然后关于Pow不等于0的时候的mu值，直接用mu的定义来算，而在极限数据中Pow不等于0的最多就有5W个，所以这样的效率是$O(n^{1/2}+(5w)^{3/2})$效率是0.2s左右。<br>Ps：坑爹的是我的跳的部分写错了，Orz <strong>zrt</strong> 大神帮我改对了</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">const</span> LL mod=<span class=\"number\">1000000007</span>,INF=(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">29</span>);</div><div class=\"line\">LL N,K,L,R,Ans,mu[<span class=\"number\">50000</span>];</div><div class=\"line\"><span class=\"function\">LL <span class=\"title\">Pow</span><span class=\"params\">(LL x,LL t)</span></span>&#123;</div><div class=\"line\">\tLL ans=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(t)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(t&amp;<span class=\"number\">1</span>)ans=(ans*x)%mod;</div><div class=\"line\">\t\tx=(x*x)%mod;</div><div class=\"line\">\t\tt&gt;&gt;=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> ans;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">GetEvemu</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> lim=<span class=\"built_in\">sqrt</span>(x);</div><div class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=lim;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(x%i==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tx/=i;</div><div class=\"line\">\t\t\tret*=<span class=\"number\">-1</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x%i==<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(x&gt;<span class=\"number\">1</span>) ret*=<span class=\"number\">-1</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> ret;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(LL i=<span class=\"number\">1</span>;i&lt;=R;i++)&#123;</div><div class=\"line\">\t\tLL k=Pow(R/i-L/i,N);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(k&gt;<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tAns+=k*GetEvemu(i); Ans=(Ans+mod)%mod;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>((R/i)==(L/i))&#123;</div><div class=\"line\">\t\t\ti=min(R/(R/i),L/i? (L/(L/i)):INF);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,Ans);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld%lld%lld\"</span>,&amp;N,&amp;K,&amp;L,&amp;R);</div><div class=\"line\">\tL=(L<span class=\"number\">-1</span>)/K; R=R/K;</div><div class=\"line\">    work();</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}