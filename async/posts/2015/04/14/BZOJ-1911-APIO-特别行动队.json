{"tags":[{"name":"斜率优化","permalink":"http://lzy-foenix.github.io/tags/斜率优化/","url":"\\async\\tags\\斜率优化.json","count":1}],"categories":[{"name":"动态规划","permalink":"http://lzy-foenix.github.io/categories/动态规划/","url":"\\async\\categories\\动态规划.json","count":11}],"url":"\\async\\posts\\2015\\04\\14\\BZOJ-1911-APIO-特别行动队.json","date":1428995226000,"path":{"year":2015,"month":4,"day":14,"name":"BZOJ-1911-APIO-特别行动队"},"title":"BZOJ-1911[APIO]特别行动队","permalink":"http://lzy-foenix.github.io/2015/04/14/BZOJ-1911-APIO-特别行动队/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>裸地斜率优化的题目，不会斜率DP的孩纸<a href=\"http://blog.csdn.net/balloons2012/article/details/7912296\" target=\"_blank\" rel=\"external\">请戳这里</a></p>\n<p>我们先列出动态规划转移方程$f[i]=max(f[i],f[j]+a\\cdot (Sum[i]-Sum[j])^2+b\\cdot (Sum[i]-Sum[j])+c)$<br>很显然，这里有一个明显的斜率优化</p>\n<p>假设$k &lt; j &lt; i$,且j比k优那么<br>$$f[j]+a\\cdot (Sum[i]-Sum[j])^2 + b\\cdot (Sum[i]-Sum[j]) + c &gt; f[k]+a\\cdot (Sum[i]-Sum[k])^2 + b\\cdot (Sum[i]-Sum[k]) + c$$<br>可以得到<br>$$f[j]-f[k] + a\\cdot (Sum[j]^2-Sum[k]^2)+b\\cdot (Sum[k]-Sum[j]) &gt; 2\\cdot a\\cdot (Sum[j]-Sum[k])\\cdot Sum[i]$$</p>\n<p>所以进行斜率优化<br><del>Ps:神马情况，看来我还是太弱了,</del><br>时隔2个月再写斜率DP都忘干净了，斜率DP第一个while的判断是由上面推出来的式子，第二个while是维护与上面的判断关系相反的一个凸壳。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">1000005</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> N,a,b,c;</div><div class=\"line\">LL Sum[MAXN],X[MAXN],f[MAXN],q[MAXN];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tLL x;<span class=\"keyword\">char</span> ch;<span class=\"keyword\">bool</span> bo=<span class=\"literal\">false</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!<span class=\"built_in\">isdigit</span>(ch=getchar()))<span class=\"keyword\">if</span>(ch==<span class=\"string\">'-'</span>)<span class=\"keyword\">break</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(ch==<span class=\"string\">'-'</span>)bo=<span class=\"literal\">true</span>,x=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">else</span> x=ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>( <span class=\"built_in\">isdigit</span>(ch=getchar()))x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> bo==<span class=\"literal\">true</span>? (-x):x;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">LL <span class=\"title\">Calc</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</div><div class=\"line\">\tLL sum=Sum[i]-Sum[j];</div><div class=\"line\">\t<span class=\"keyword\">return</span> a*sum*sum+b*sum+c;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">sqr</span><span class=\"params\">(LL a)</span></span>&#123;<span class=\"keyword\">return</span> a*a;&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">double</span> <span class=\"title\">slop</span><span class=\"params\">(<span class=\"keyword\">int</span> k,<span class=\"keyword\">int</span> j)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> (<span class=\"keyword\">double</span>)(f[j]-f[k]+a*(sqr(Sum[j])-sqr(Sum[k]))+b*(Sum[k]-Sum[j]))/(<span class=\"keyword\">double</span>)(<span class=\"number\">2</span>*a*(Sum[j]-Sum[k]));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DP</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> h=<span class=\"number\">0</span>,t=<span class=\"number\">0</span>;</div><div class=\"line\">\tq[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</div><div class=\"line\">\tLL Max=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">        f[i]=a*X[i]*X[i]+b*X[i]+c;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(h&lt;t &amp;&amp; f[q[h+<span class=\"number\">1</span>]]-f[q[h]] &gt; (Sum[q[h+<span class=\"number\">1</span>]]-Sum[q[h]]) * (a*(<span class=\"number\">2</span>*Sum[i]-Sum[q[h+<span class=\"number\">1</span>]]-Sum[q[h]]) + b))h++;</div><div class=\"line\">\t\tf[i]=f[q[h]]+Calc(i,q[h]);</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(h&lt;t &amp;&amp; slop(q[t<span class=\"number\">-1</span>],q[t]) &gt; slop(q[t],i))t--;</div><div class=\"line\">\t\tq[++t]=i;</div><div class=\"line\">\t\tMax=Max&gt;f[i]? Max:f[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,f[N]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tN=Get(); a=Get(); b=Get(); c=Get();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)X[i]=Get(),Sum[i]=Sum[i<span class=\"number\">-1</span>]+X[i];</div><div class=\"line\">\tDP();</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}