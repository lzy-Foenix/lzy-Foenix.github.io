{"tags":[{"name":"树链剖分","permalink":"http://lzy-foenix.github.io/tags/树链剖分/","url":"\\async\\tags\\树链剖分.json","count":4}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\04\\12\\BZOJ-3531-SDOI2014-旅行.json","date":1428846239000,"path":{"year":2015,"month":4,"day":12,"name":"BZOJ-3531-SDOI2014-旅行"},"title":"BZOJ-3531[SDOI2014]旅行","permalink":"http://lzy-foenix.github.io/2015/04/12/BZOJ-3531-SDOI2014-旅行/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>题解很好想，先树链剖分，然后对于每一个宗教建立线段树，但是必须采用动态开点的方法，否则会MLE。</p>\n<p>代码实现能力必须强啊！！！这题典型的好想不好写。。。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">200005</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> to,next;</div><div class=\"line\">&#125;Edge[MAXN&lt;&lt;<span class=\"number\">1</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> N,Q,len,num;</div><div class=\"line\"><span class=\"keyword\">int</span> head[MAXN],fa[MAXN],son[MAXN],siz[MAXN],Deep[MAXN];</div><div class=\"line\"><span class=\"keyword\">int</span> top[MAXN],w[MAXN],fw[MAXN],Val[MAXN],C[MAXN];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Add_edge</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\tlen++; Edge[len].to=b; Edge[len].next=head[a]; head[a]=len;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> a,b;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;N,&amp;Q);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;Val[i],&amp;C[i]);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</div><div class=\"line\">\t\tAdd_edge(a,b); Add_edge(b,a);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS1</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\tsiz[x]=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[x];i;i=Edge[i].next)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y=Edge[i].to;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(fa[x]==y)<span class=\"keyword\">continue</span>;</div><div class=\"line\">\t\tDeep[y]=Deep[x]+<span class=\"number\">1</span>; fa[y]=x;</div><div class=\"line\">\t\tDFS1(y); siz[x]+=siz[y];</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(siz[y]&gt;siz[son[x]])son[x]=y;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS2</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> root)</span></span>&#123;</div><div class=\"line\">\tw[x]=++num; fw[w[x]]=x; top[x]=root;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(!son[x])<span class=\"keyword\">return</span>;</div><div class=\"line\">\tDFS2(son[x],root);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[x];i;i=Edge[i].next)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y=Edge[i].to;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(y!=fa[x] &amp;&amp; y!=son[x])DFS2(y,y);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> node,Ql,Qr,rel;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//由于线段树中的连续的可能会不是一个宗教的，所以我们要用l，r来代表下一个线段 </span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lc(x) Seg[x].l</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> rc(x) Seg[x].r</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lson(x) Seg[x].l,l,mid</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> rson(x) Seg[x].r,mid+1,r </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">struct</span> NODE&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> l,r,maxx,sum;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tmaxx=<span class=\"number\">-100000000</span>;</div><div class=\"line\">\t\tsum=<span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;Seg[MAXN*<span class=\"number\">100</span>],ret;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">NODE <span class=\"title\">Updata</span><span class=\"params\">(NODE a,NODE b)</span></span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//取两者合并的值</span></div><div class=\"line\">\tNODE res;</div><div class=\"line\">\tres.clear();</div><div class=\"line\">\tres.sum=a.sum+b.sum;</div><div class=\"line\">\tres.maxx=max(a.maxx,b.maxx);</div><div class=\"line\">\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push_up</span><span class=\"params\">(<span class=\"keyword\">int</span> root)</span></span>&#123;</div><div class=\"line\">\tSeg[root].sum=Seg[lc(root)].sum+Seg[rc(root)].sum;</div><div class=\"line\">\tSeg[root].maxx=max(Seg[lc(root)].maxx,Seg[rc(root)].maxx);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">new_node</span><span class=\"params\">(<span class=\"keyword\">int</span> root)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Seg[root].l==<span class=\"number\">0</span>) Seg[root].l=++node;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Seg[root].r==<span class=\"number\">0</span>) Seg[root].r=++node;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">void</span> _change(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> val)&#123;</div><div class=\"line\">\tnew_node(root);</div><div class=\"line\">\t<span class=\"comment\">//如果当前节点不存在，就新开节点 </span></div><div class=\"line\">\t<span class=\"keyword\">if</span>(Ql&lt;=l &amp;&amp; Qr&gt;=r)&#123;</div><div class=\"line\">\t\tSeg[root].sum=Seg[root].maxx=val;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Ql&lt;=mid) _change(lson(root),val);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Qr&gt; mid) _change(rson(root),val);</div><div class=\"line\">\tPush_up(root);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">NODE _query(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)&#123;</div><div class=\"line\">\tnew_node(root);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Ql&lt;=l &amp;&amp; Qr&gt;=r)</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> Seg[root];</div><div class=\"line\">\t<span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">\tNODE ans; ans.clear();</div><div class=\"line\">\t<span class=\"comment\">//Updata始终记录最优值,注意ans是在递归层中定义的，而且如果放到全局变量中会错</span></div><div class=\"line\">\t<span class=\"keyword\">if</span>(Ql&lt;=mid) ans=Updata(ans,_query(lson(root)));</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Qr&gt; mid) ans=Updata(ans,_query(rson(root)));</div><div class=\"line\">\t<span class=\"keyword\">return</span> ans;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">NODE <span class=\"title\">Get_ans</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> f1=top[a],f2=top[b];</div><div class=\"line\">\tNODE ans;ans.clear();</div><div class=\"line\">\t<span class=\"keyword\">while</span>(f1!=f2)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Deep[f1]&lt;Deep[f2])&#123;</div><div class=\"line\">\t\t\tswap(f1,f2); swap(a,b);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tQl=w[f1]; Qr=w[a];</div><div class=\"line\">\t\tans=Updata(ans,_query(rel,<span class=\"number\">1</span>,num));</div><div class=\"line\">\t\ta=fa[f1]; f1=top[a];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Deep[a]&gt;Deep[b])swap(a,b);</div><div class=\"line\">\tQl=w[a]; Qr=w[b];</div><div class=\"line\">\t<span class=\"keyword\">return</span> Updata(ans,_query(rel,<span class=\"number\">1</span>,num));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Query_Sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\trel=C[a];<span class=\"comment\">//rel代表根节点</span></div><div class=\"line\">\tret=Get_ans(a,b);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ret.sum);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Query_Max</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\trel=C[a];</div><div class=\"line\">\tret=Get_ans(a,b);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ret.maxx);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ChangeC</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\tQl=w[a]; Qr=w[a];</div><div class=\"line\">\t<span class=\"comment\">//现将原来所在宗教树中的影响消除，变为0 </span></div><div class=\"line\">\t_change(C[a],<span class=\"number\">1</span>,num,<span class=\"number\">0</span>);</div><div class=\"line\">\tC[a]=b;</div><div class=\"line\">\t<span class=\"comment\">//加入到新的宗教里面 </span></div><div class=\"line\">\t_change(C[a],<span class=\"number\">1</span>,num,Val[a]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ChangeV</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\tQl=w[a]; Qr=w[a];</div><div class=\"line\">\tVal[a]=b;</div><div class=\"line\">\t_change(C[a],<span class=\"number\">1</span>,num,Val[a]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Work</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tDFS1(<span class=\"number\">1</span>); DFS2(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</div><div class=\"line\">\tnode=N;<span class=\"comment\">//先开N个节点,代表n个宗教 </span></div><div class=\"line\">\t<span class=\"keyword\">char</span> ch[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> a,b;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tQl=w[i]; Qr=w[i];</div><div class=\"line\">\t\t<span class=\"comment\">//以此加入每一个城市，要以当前城市为根节点,C[i]便为根 </span></div><div class=\"line\">\t\t_change(C[i],<span class=\"number\">1</span>,num,Val[i]);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=Q;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s %d %d\"</span>,ch,&amp;a,&amp;b);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(ch[<span class=\"number\">0</span>]==<span class=\"string\">'Q'</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ch[<span class=\"number\">1</span>]==<span class=\"string\">'S'</span>)Query_Sum(a,b);</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span> Query_Max(a,b);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ch[<span class=\"number\">1</span>]==<span class=\"string\">'C'</span>)ChangeC(a,b);</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span> ChangeV(a,b);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tfreopen(<span class=\"string\">\"1.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tInit();</div><div class=\"line\">\tWork();</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}