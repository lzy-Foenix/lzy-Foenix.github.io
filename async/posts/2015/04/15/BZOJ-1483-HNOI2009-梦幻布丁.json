{"tags":[{"name":"链表","permalink":"http://lzy-foenix.github.io/tags/链表/","url":"\\async\\tags\\链表.json","count":1}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\04\\15\\BZOJ-1483-HNOI2009-梦幻布丁.json","date":1429081945000,"path":{"year":2015,"month":4,"day":15,"name":"BZOJ-1483-HNOI2009-梦幻布丁"},"title":"BZOJ-1483[HNOI2009]梦幻布丁","permalink":"http://lzy-foenix.github.io/2015/04/15/BZOJ-1483-HNOI2009-梦幻布丁/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>用链表记录一种颜色，把不连续的几某一种颜色的起始块串起来，并且记录某一种颜色的起始块。合并的时候把块内元素少的合并到块内元素多的那一个上面。<br>下面引自<a href=\"http://hzwer.com/2858.html\" target=\"_blank\" rel=\"external\">hzwer.com</a>合并之后，会出现一个问题：<br>比如合并1,2,siz[1]&gt;siz[2]，所以应该吧2合并到1的后边，那么以后再去找颜色2的时候，只有颜色1没有颜色2，所以我们还要开一个数组记录实际应该找哪一种颜色，对于上一种情况的话，就交换f[1],f[2]</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">100005</span>,MAXM=<span class=\"number\">1000005</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> N,Q,Ans;</div><div class=\"line\"><span class=\"keyword\">int</span> Col[MAXN],fa[MAXM];</div><div class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;S[MAXM];</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> x;<span class=\"keyword\">char</span> ch;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!<span class=\"built_in\">isdigit</span>(ch=getchar())); x=ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>( <span class=\"built_in\">isdigit</span>(ch=getchar()))x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> x;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Solve</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator It;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(It=S[a].begin();It!=S[a].end();It++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Col[*It<span class=\"number\">-1</span>] == b)Ans--;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Col[*It+<span class=\"number\">1</span>] == b)Ans--;</div><div class=\"line\">\t\tS[b].insert(*It);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(It=S[a].begin(); It!=S[a].end();It++)</div><div class=\"line\">\t    Col[*It]=b;</div><div class=\"line\">\tS[a].clear();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tN=Get(); Q=Get();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tCol[i]=Get();</div><div class=\"line\">\t\tfa[Col[i]]=Col[i];</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Col[i]!=Col[i<span class=\"number\">-1</span>])Ans++;</div><div class=\"line\">\t\tS[Col[i]].insert(i);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> x,a,b;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=Q;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(x==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a==b)<span class=\"keyword\">continue</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(S[fa[a]].size() &gt; S[fa[b]].size())</div><div class=\"line\">\t\t\t    swap(fa[a],fa[b]);</div><div class=\"line\">\t\t\ta=fa[a]; b=fa[b];</div><div class=\"line\">\t\t\tSolve(a,b);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Ans);</div><div class=\"line\">\t&#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}