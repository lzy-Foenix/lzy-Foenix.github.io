{"tags":[{"name":"平衡树","permalink":"http://lzy-foenix.github.io/tags/平衡树/","url":"\\async\\tags\\平衡树.json","count":2}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\04\\15\\BZOJ-1691-USACO2007DEC-挑剔的美食家.json","date":1429070854000,"path":{"year":2015,"month":4,"day":15,"name":"BZOJ-1691-USACO2007DEC-挑剔的美食家"},"title":"BZOJ-1691[USACO2007DEC]挑剔的美食家","permalink":"http://lzy-foenix.github.io/2015/04/15/BZOJ-1691-USACO2007DEC-挑剔的美食家/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>贪心加平衡树</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">100005</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> N,M,Size,Root,Pos;</div><div class=\"line\"><span class=\"keyword\">int</span> v[MAXN],l[MAXN],r[MAXN],rnd[MAXN],w[MAXN];</div><div class=\"line\">LL Ans;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> x,y;</div><div class=\"line\">&#125;Cow[MAXN],Glass[MAXN];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">comp</span><span class=\"params\">(node A,node B)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> A.y&gt;B.y;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Lturn</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;root)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> t=r[root]; r[root]=l[t]; l[t]=root; root=t;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rturn</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;root)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> t=l[root]; l[root]=r[t]; r[t]=root; root=t;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;root,<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(!root)&#123;</div><div class=\"line\">\t\troot=++Size; v[root]=x;</div><div class=\"line\">\t\tw[root]=<span class=\"number\">1</span>;rnd[root]=rand();</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(x==v[root])w[root]++;</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x &lt; v[root])&#123;</div><div class=\"line\">\t\tInsert(l[root],x);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(rnd[l[root]] &lt; rnd[root])Rturn(root);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\tInsert(r[root],x);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(rnd[r[root]] &lt; rnd[root])Lturn(root);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Del</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;root,<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(x==v[root])&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(w[root] &gt; <span class=\"number\">1</span>)w[root]--;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l[root] * r[root] == <span class=\"number\">0</span>)root=l[root]+r[root];</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(rnd[l[root]] &lt; rnd[r[root]])&#123;</div><div class=\"line\">\t\t\tRturn(root); Del(root,x);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\tLturn(root); Del(root,x);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x &lt; v[root]) Del(l[root],x);</div><div class=\"line\">\t<span class=\"keyword\">else</span> Del(r[root],x);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Find</span><span class=\"params\">(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(!root)<span class=\"keyword\">return</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(v[root] &gt;= x)&#123;</div><div class=\"line\">\t\tPos=v[root]; Find(l[root],x);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">else</span> Find(r[root],x);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Work</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tsort(Cow+<span class=\"number\">1</span>,Cow+N+<span class=\"number\">1</span>,comp);</div><div class=\"line\">\tsort(Glass+<span class=\"number\">1</span>,Glass+M+<span class=\"number\">1</span>,comp);</div><div class=\"line\">\t<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tPos=<span class=\"number\">-1</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(Glass[j].y &gt;= Cow[i].y &amp;&amp; j&lt;=M)Insert(Root,Glass[j].x),j++;</div><div class=\"line\">\t\tFind(Root,Cow[i].x);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Pos==<span class=\"number\">-1</span>)&#123;<span class=\"built_in\">puts</span>(<span class=\"string\">\"-1\"</span>);<span class=\"keyword\">return</span>;&#125;</div><div class=\"line\">\t\tAns+=Pos;Del(Root,Pos);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;N,&amp;M);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;Cow[i].x,&amp;Cow[i].y);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;Glass[i].x,&amp;Glass[i].y);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    Init();</div><div class=\"line\">    Work();</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,Ans);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}