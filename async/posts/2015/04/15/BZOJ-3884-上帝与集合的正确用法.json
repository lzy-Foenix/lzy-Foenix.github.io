{"tags":[{"name":"数论","permalink":"http://lzy-foenix.github.io/tags/数论/","url":"\\async\\tags\\数论.json","count":8}],"categories":[{"name":"数学","permalink":"http://lzy-foenix.github.io/categories/数学/","url":"\\async\\categories\\数学.json","count":24}],"url":"\\async\\posts\\2015\\04\\15\\BZOJ-3884-上帝与集合的正确用法.json","date":1429092187000,"path":{"year":2015,"month":4,"day":15,"name":"BZOJ-3884-上帝与集合的正确用法"},"title":"BZOJ-3884-上帝与集合的正确用法","permalink":"http://lzy-foenix.github.io/2015/04/15/BZOJ-3884-上帝与集合的正确用法/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>神题。。。<br><a href=\"http://blog.csdn.net/popoqqq/article/details/43951401\" target=\"_blank\" rel=\"external\">出题人PoPoQQQ题解</a><br>本蒟蒻的理解：<br>首先PoPoQQQ大神用的是欧拉定理，即$a^{\\phi(p)}\\equiv 1(\\mod p)$，且欧拉定理的适用范围是$Gcd(a,p)=1$,所以欧拉定理是化简幂运算的。<br>简易的来表示一下欧拉定理是如何化简运算的，我们要求$7^{2333}$的个位是什么数字，也就是说求$7^{2333}\\mod 10$的答案，那么根据欧拉定理的使用条件$Gcd(7,10)=1$可以使用，而且可以了解到，一旦出现一个$7^{\\phi(10)}$那么答案就是1，所以我们就可以化简为$7^{2333\\mod \\phi(p)}\\mod 10$进而变成了$7^{1}\\mod 10 =7$</p>\n<hr>\n<p>这道题我们要求得答案是$2^{2^{2^{2…}}}\\mod p$,然而我们可以不用欧拉定理,而用一个比较好的公式$a^{x}\\equiv a^{x\\mod \\phi(p)+\\phi(p)\\mod p}$,<a href=\"http://hi.baidu.com/aekdycoin/item/e493adc9a7c0870bad092fd9\" target=\"_blank\" rel=\"external\">一定要戳开膜拜一下AekdyCoin</a><br>首先令$f[p]=2^{2^{2^{2…}}}\\mod p$,那么$f[1]=0$，且$f[p]=2^{2^{2^{2…}}\\mod \\phi(p)+\\phi(p)}\\mod p$这里又加了一个$\\phi(p)$是为了防止出现$x\\mod \\phi(p)=0$的情况，用到递归的写法，然后当$f[1]=0$所以这个时候就停止递归</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt;f;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Quick_muti</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> p)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(t)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(t&amp;<span class=\"number\">1</span>)ans=((LL)ans*(LL)a)%p;</div><div class=\"line\">\t\ta=((LL)a*(LL)a)%p;</div><div class=\"line\">\t\tt&gt;&gt;=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> ans;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Phi</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> res=x;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i*i&lt;=x;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(x%i==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tres-=res/i;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span>(x%i==<span class=\"number\">0</span>)x/=i;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(x&gt;<span class=\"number\">1</span>)res-=res/x;</div><div class=\"line\">\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Solve</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(f.count(x))</div><div class=\"line\">\t    <span class=\"keyword\">return</span> f[x];</div><div class=\"line\">\t<span class=\"keyword\">int</span> p=Phi(x);</div><div class=\"line\">\tf[x]=Quick_muti(<span class=\"number\">2</span>,Solve(p)+p,x);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> T,P; f[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;T);</div><div class=\"line\">    <span class=\"keyword\">while</span>(T--)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;P);</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Solve(P));</div><div class=\"line\">\t&#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}