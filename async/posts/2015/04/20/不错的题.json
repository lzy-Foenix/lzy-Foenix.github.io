{"tags":[{"name":"平衡树","permalink":"http://lzy-foenix.github.io/tags/平衡树/","url":"\\async\\tags\\平衡树.json","count":2}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\04\\20\\不错的题.json","date":1429519445000,"path":{"year":2015,"month":4,"day":20,"name":"不错的题"},"title":"不错的题","permalink":"http://lzy-foenix.github.io/2015/04/20/不错的题/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题目大意：\"><a href=\"#题目大意：\" class=\"headerlink\" title=\"题目大意：\"></a>题目大意：</h3><p>给你一个长度为N的数列，数列的每一个元素有一个颜色，设计一个程序，支持两种操作，0：查询数组中有多少子区间不存在重复的颜色；1：修改某个点的颜色</p>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>说这道题是平衡树有点牵强，平衡树只是辅助用的。</p>\n<p>首先暴力比较好想，n^2的暴力，i这个位置对答案的贡献是以i为结尾的前面最长的那个没有重复元素的区间的长度。</p>\n<p>其次我们可以根据这个暴力的思想来优化一下，因为n^2中有的地方是多余的，详情看代码，解析很全面。</p>\n<h3 id=\"代码-30暴力-：\"><a href=\"#代码-30暴力-：\" class=\"headerlink\" title=\"代码(30暴力)：\"></a>代码(30暴力)：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">1005</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> N,M;</div><div class=\"line\"><span class=\"keyword\">int</span> A[MAXN],L[MAXN];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Query</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(L,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(L));</div><div class=\"line\">\t<span class=\"keyword\">int</span> last=<span class=\"number\">0</span>,Ans=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tlast=max(last,L[A[i]]);</div><div class=\"line\">\t\tAns+=i-last; L[A[i]]=i;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Ans);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;A[i]);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;M);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,a,b,c;i&lt;=M;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(a)&#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;b,&amp;c);</div><div class=\"line\">\t\t\tA[b]=c;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t    Query();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码:\"></a>代码:</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">100005</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> N,M;</div><div class=\"line\">LL Ans;</div><div class=\"line\"><span class=\"keyword\">int</span> Col[MAXN],Next[MAXN],Last[MAXN],L[MAXN];</div><div class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;Pos[MAXN];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)Pos[i].insert(<span class=\"number\">0</span>),Pos[i].insert(N+<span class=\"number\">1</span>);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> p=(*--Pos[Col[i]].lower_bound(i));</div><div class=\"line\">\t\tNext[p]=i; Last[i]=p;</div><div class=\"line\">\t\t<span class=\"comment\">//构建Next和Last</span></div><div class=\"line\">\t\tL[i]=max(L[i<span class=\"number\">-1</span>],p);</div><div class=\"line\">\t\t<span class=\"comment\">//对于第i个位置来说，p可以看成是p到i这段区间内没有重复的元素</span></div><div class=\"line\">\t\t<span class=\"comment\">//必须找最大的那个，连续记录</span></div><div class=\"line\">\t\tAns+=(LL)(i-L[i]);</div><div class=\"line\">\t\tPos[Col[i]].insert(i);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> z)</span></span>&#123;</div><div class=\"line\">\tNext[y]=x; Last[x]=y;</div><div class=\"line\">\tNext[x]=z; Last[z]=x;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Updata</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> tmp=L[i];</div><div class=\"line\">\t\tL[i]=max(L[i<span class=\"number\">-1</span>],Last[i]);</div><div class=\"line\">\t\t<span class=\"comment\">//更新了Last数组，那么也就是更新了对于i这个位置来说，上一个出现Col[i]的位置与最大值L[i-1]比较</span></div><div class=\"line\">\t\tAns-=(LL)i-tmp;</div><div class=\"line\">\t\tAns+=(LL)i-L[i];</div><div class=\"line\">\t\t<span class=\"comment\">//如果最大值已经超过了x,证明从x到i这段区间内已经存在了重复的元素，如果现在的L[i]=原来的L[i],那么后面就都是一样的了</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(L[i]&gt;x &amp;&amp; L[i]==tmp)<span class=\"keyword\">break</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Eraser</span><span class=\"params\">(<span class=\"keyword\">int</span> p)</span></span>&#123;</div><div class=\"line\">\tNext[Last[p]]=Next[p];</div><div class=\"line\">\tLast[Next[p]]=Last[p];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tfreopen(<span class=\"string\">\"array.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfreopen(<span class=\"string\">\"array.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Col[i]);</div><div class=\"line\">    Init();</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;M);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,a,b,c;i&lt;=M;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;b,&amp;c);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Col[b]==c)<span class=\"keyword\">continue</span>;</div><div class=\"line\">\t\t\tPos[Col[b]].erase(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">//现在颜色Col[b]集合中删除b额位置下标</span></div><div class=\"line\">\t\t\tEraser(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">//删除b位置的影响，就是将b所在的Next和Last分别指向下一个和上一个</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> y= *--Pos[c].lower_bound(b);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> z= *Pos[c].lower_bound(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">//y是在c集合中找第一个比他小的，z是c集合中第一个大于他的</span></div><div class=\"line\">\t\t\tInsert(b,y,z);</div><div class=\"line\">\t\t\t<span class=\"comment\">//加入这个新的点</span></div><div class=\"line\">\t\t\tPos[c].insert(b);</div><div class=\"line\">\t\t\tCol[b]=c;</div><div class=\"line\">\t\t\t<span class=\"comment\">//更改颜色，加入集合</span></div><div class=\"line\">\t\t\tUpdata(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">//更新答案</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,Ans);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}