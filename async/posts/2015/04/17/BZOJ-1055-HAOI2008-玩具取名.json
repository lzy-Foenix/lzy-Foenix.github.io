{"tags":[{"name":"区间动规","permalink":"http://lzy-foenix.github.io/tags/区间动规/","url":"\\async\\tags\\区间动规.json","count":3}],"categories":[{"name":"动态规划","permalink":"http://lzy-foenix.github.io/categories/动态规划/","url":"\\async\\categories\\动态规划.json","count":11}],"url":"\\async\\posts\\2015\\04\\17\\BZOJ-1055-HAOI2008-玩具取名.json","date":1429243951000,"path":{"year":2015,"month":4,"day":17,"name":"BZOJ-1055-HAOI2008-玩具取名"},"title":"BZOJ-1055[HAOI2008]玩具取名","permalink":"http://lzy-foenix.github.io/2015/04/17/BZOJ-1055-HAOI2008-玩具取名/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>动态规划一直是我的短板啊。。。<br>令f[i][j][k]表示i到j能否组成第k个字符，那么转移就是f[i][k][p]&amp;f[k+1][j][q],p和q分别表示当前变换的第一个字符和第二个字符（字符‘W’…变换成给出的两个字符中的第一个和第二个，这里需要枚举），然后用人类思维的记忆化搜索就好了。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> f[<span class=\"number\">205</span>][<span class=\"number\">205</span>][<span class=\"number\">4</span>],q[<span class=\"number\">255</span>],t[<span class=\"number\">4</span>];</div><div class=\"line\"><span class=\"keyword\">char</span> ch[<span class=\"number\">205</span>],a[<span class=\"number\">4</span>][<span class=\"number\">20</span>][<span class=\"number\">2</span>],p[<span class=\"number\">4</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">DP</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> k)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(l==r)</div><div class=\"line\">\t    <span class=\"keyword\">return</span> (ch[l]==p[k]);</div><div class=\"line\">\t<span class=\"keyword\">int</span> &amp;res=f[l][r][k];</div><div class=\"line\">\t<span class=\"keyword\">if</span>(res!=<span class=\"number\">-1</span>)<span class=\"keyword\">return</span> res;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=t[k];i++)</div><div class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=l;j&lt;r;j++)</div><div class=\"line\">\t        <span class=\"keyword\">if</span>(DP(l,j,q[a[k][i][<span class=\"number\">0</span>]]) &amp;&amp; DP(j+<span class=\"number\">1</span>,r,q[a[k][i][<span class=\"number\">1</span>]]))</div><div class=\"line\">\t        <span class=\"keyword\">return</span> (res=<span class=\"number\">1</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> (res=<span class=\"number\">0</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">memset</span>(f,<span class=\"number\">-1</span>,<span class=\"keyword\">sizeof</span>(f));</div><div class=\"line\">    p[<span class=\"number\">0</span>]=<span class=\"string\">'W'</span>; p[<span class=\"number\">1</span>]=<span class=\"string\">'I'</span>; p[<span class=\"number\">2</span>]=<span class=\"string\">'N'</span>; p[<span class=\"number\">3</span>]=<span class=\"string\">'G'</span>;</div><div class=\"line\">    q[<span class=\"string\">'W'</span>]=<span class=\"number\">0</span>; q[<span class=\"string\">'I'</span>]=<span class=\"number\">1</span>; q[<span class=\"string\">'N'</span>]=<span class=\"number\">2</span>; q[<span class=\"string\">'G'</span>]=<span class=\"number\">3</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;t[i]);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)</div><div class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=t[i];j++)</div><div class=\"line\">\t        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,a[i][j]);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,ch+<span class=\"number\">1</span>);</div><div class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"built_in\">strlen</span>(ch+<span class=\"number\">1</span>);</div><div class=\"line\">\t<span class=\"keyword\">bool</span> flag=<span class=\"literal\">false</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)</div><div class=\"line\">\t    <span class=\"keyword\">if</span>(DP(<span class=\"number\">1</span>,l,i))flag=<span class=\"literal\">true</span>,<span class=\"built_in\">cout</span>&lt;&lt;p[i];</div><div class=\"line\">\t<span class=\"keyword\">if</span>(!flag)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"The name is wrong!\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}