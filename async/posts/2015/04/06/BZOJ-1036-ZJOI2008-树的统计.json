{"tags":[{"name":"树链剖分","permalink":"http://lzy-foenix.github.io/tags/树链剖分/","url":"\\async\\tags\\树链剖分.json","count":4}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\04\\06\\BZOJ-1036-ZJOI2008-树的统计.json","date":1428314774000,"path":{"year":2015,"month":4,"day":6,"name":"BZOJ-1036-ZJOI2008-树的统计"},"title":"BZOJ-1036[ZJOI2008]树的统计","permalink":"http://lzy-foenix.github.io/2015/04/06/BZOJ-1036-ZJOI2008-树的统计/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>树链剖分复习，从最简单的开始。详解代码里面有</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">300005</span>,INF=(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">29</span>);</div><div class=\"line\"><span class=\"keyword\">int</span> N,Q;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> to,next;</div><div class=\"line\">&#125;Edge[MAXN&lt;&lt;<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> len=<span class=\"number\">1</span>,head[MAXN],num;</div><div class=\"line\"><span class=\"keyword\">int</span> Val[MAXN];</div><div class=\"line\"><span class=\"keyword\">int</span> fa[MAXN];<span class=\"comment\">//父亲节点 </span></div><div class=\"line\"><span class=\"keyword\">int</span> son[MAXN];<span class=\"comment\">//重儿子 </span></div><div class=\"line\"><span class=\"keyword\">int</span> siz[MAXN];<span class=\"comment\">//num[x]表示以x为根的子树的节点数 </span></div><div class=\"line\"><span class=\"keyword\">int</span> Deep[MAXN];<span class=\"comment\">//表示x的深度 </span></div><div class=\"line\"><span class=\"keyword\">int</span> w[MAXN];<span class=\"comment\">//w[x]表示x在线段树中的位置</span></div><div class=\"line\"><span class=\"keyword\">int</span> fw[MAXN];<span class=\"comment\">//和w数组相反 表示线段树中的位置上是什么节点 </span></div><div class=\"line\"><span class=\"keyword\">int</span> top[MAXN];<span class=\"comment\">//top[x]表示x所在的重莲的短点节点 </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Add_edge</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\tlen++; Edge[len].to=b; Edge[len].next=head[a]; head[a]=len;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS1</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;<span class=\"comment\">//第一遍dfs求出fa,son,deep,siz </span></div><div class=\"line\">\tsiz[x]=<span class=\"number\">1</span>; son[x]=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[x],y=Edge[i].to;i;i=Edge[i].next,y=Edge[i].to)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(y==fa[x])<span class=\"keyword\">continue</span>;</div><div class=\"line\">\t\tfa[y]=x; Deep[y]=Deep[x]+<span class=\"number\">1</span>;</div><div class=\"line\">\t\tDFS1(y); siz[x]+=siz[y];</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(siz[y]&gt;siz[son[x]])son[x]=y;<span class=\"comment\">//选择重儿子</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS2</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> root)</span></span>&#123;<span class=\"comment\">//d第二遍dfs构造线段树 </span></div><div class=\"line\">\tw[x]=++num; top[x]=root; fw[w[x]]=x;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(son[x]==<span class=\"number\">0</span>)<span class=\"keyword\">return</span>;</div><div class=\"line\">\tDFS2(son[x],root);<span class=\"comment\">//重链上的节点的根都是root </span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[x],y=Edge[i].to;i;i=Edge[i].next,y=Edge[i].to)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(y!=son[x] &amp;&amp; y!=fa[x])DFS2(y,y);</div><div class=\"line\">\t\t<span class=\"comment\">//非重链上的点的根是他自己</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">struct</span> NODE&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> l,r,sum,max;</div><div class=\"line\">&#125;Seg[MAXN&lt;&lt;<span class=\"number\">2</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push_up</span><span class=\"params\">(<span class=\"keyword\">int</span> root)</span></span>&#123;</div><div class=\"line\">\tSeg[root].sum=Seg[root&lt;&lt;<span class=\"number\">1</span>].sum+Seg[root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].sum;</div><div class=\"line\">\tSeg[root].max=max(Seg[root&lt;&lt;<span class=\"number\">1</span>].max,Seg[root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].max);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Build</span><span class=\"params\">(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">\tSeg[root].l=l; Seg[root].r=r;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(l==r)&#123;</div><div class=\"line\">\t\tSeg[root].sum=Seg[root].max=Val[fw[l]];</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">\tBuild(root&lt;&lt;<span class=\"number\">1</span>,l,mid); Build(root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</div><div class=\"line\">\tPush_up(root);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Updata</span><span class=\"params\">(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> k,<span class=\"keyword\">int</span> val)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Seg[root].l==k &amp;&amp; Seg[root].r==k)&#123;</div><div class=\"line\">\t\tSeg[root].sum=Seg[root].max=val;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> mid=(Seg[root].l+Seg[root].r)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(k&lt;=mid)Updata(root&lt;&lt;<span class=\"number\">1</span>,k,val);</div><div class=\"line\">\t<span class=\"keyword\">else</span> Updata(root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,k,val);</div><div class=\"line\">\tPush_up(root);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Max</span><span class=\"params\">(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Seg[root].l==l &amp;&amp; Seg[root].r==r)</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> Seg[root].max;</div><div class=\"line\">\t<span class=\"keyword\">int</span> mid=(Seg[root].l+Seg[root].r)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(r&lt;=mid)<span class=\"keyword\">return</span> Max(root&lt;&lt;<span class=\"number\">1</span>,l,r);</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;mid)<span class=\"keyword\">return</span> Max(root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,l,r);</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> max(Max(root&lt;&lt;<span class=\"number\">1</span>,l,mid),Max(root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r));</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Query_max</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;<span class=\"comment\">//查询a到b路径上的最大值 </span></div><div class=\"line\">\t<span class=\"keyword\">int</span> f1=top[a],f2=top[b];</div><div class=\"line\">\t<span class=\"keyword\">int</span> ans=-INF;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(f1!=f2)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Deep[f1]&lt;Deep[f2])&#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//保证f1的深度大，也就是说在树中f1在下面 </span></div><div class=\"line\">\t\t\t<span class=\"comment\">//接下来的查询中，就可以保证不会漏掉 </span></div><div class=\"line\">\t\t\tswap(f1,f2); swap(a,b);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//查询从f1-&gt;a; 因为深度小的在线段树中的位置靠前 </span></div><div class=\"line\">\t\tans=max(ans,Max(<span class=\"number\">1</span>,w[f1],w[a]));</div><div class=\"line\">\t\ta=fa[f1]; f1=top[a];</div><div class=\"line\">\t\t<span class=\"comment\">//向上查询的时候，我们已经查询了f1-&gt;a这段 </span></div><div class=\"line\">\t\t<span class=\"comment\">//所以我们要把a变为f1的父亲 !!!!</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Deep[a]&gt;Deep[b])swap(a,b);</div><div class=\"line\">\t<span class=\"comment\">//保证查询的时候在线段树中位置靠前的点先是a，所以a的深度要比b的深度小</span></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,max(ans,Max(<span class=\"number\">1</span>,w[a],w[b])));</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Sum</span><span class=\"params\">(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Seg[root].l==l &amp;&amp; Seg[root].r==r)</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> Seg[root].sum;</div><div class=\"line\">\t<span class=\"keyword\">int</span> mid=(Seg[root].l+Seg[root].r)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(r&lt;=mid)<span class=\"keyword\">return</span> Sum(root&lt;&lt;<span class=\"number\">1</span>,l,r);</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;mid)<span class=\"keyword\">return</span> Sum(root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,l,r);</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> Sum(root&lt;&lt;<span class=\"number\">1</span>,l,mid)+Sum(root&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>,mid+<span class=\"number\">1</span>,r);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Query_sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> f1=top[a],f2=top[b];</div><div class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(f1!=f2)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Deep[f1]&lt;Deep[f2])&#123;</div><div class=\"line\">\t\t\tswap(f1,f2); swap(a,b);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tans+=Sum(<span class=\"number\">1</span>,w[f1],w[a]);</div><div class=\"line\">\t\ta=fa[f1]; f1=top[a];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Deep[a]&gt;Deep[b])swap(a,b);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans+Sum(<span class=\"number\">1</span>,w[a],w[b]));</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x,y;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);</div><div class=\"line\">\t\tAdd_edge(x,y); Add_edge(y,x);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Val[i]);</div><div class=\"line\">\tDFS1(<span class=\"number\">1</span>); DFS2(<span class=\"number\">1</span>,<span class=\"number\">1</span>); Build(<span class=\"number\">1</span>,<span class=\"number\">1</span>,num);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Q);</div><div class=\"line\">\t<span class=\"keyword\">char</span> ch[<span class=\"number\">10</span>]; <span class=\"keyword\">int</span> a,b;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=Q;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s%d%d\"</span>,ch,&amp;a,&amp;b);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(ch[<span class=\"number\">0</span>]==<span class=\"string\">'C'</span>)Updata(<span class=\"number\">1</span>,w[a],b);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch[<span class=\"number\">1</span>]==<span class=\"string\">'M'</span>)Query_max(a,b);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> Query_sum(a,b);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}