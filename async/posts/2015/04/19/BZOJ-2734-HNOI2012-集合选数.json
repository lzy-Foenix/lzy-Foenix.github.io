{"tags":[{"name":"状态压缩","permalink":"http://lzy-foenix.github.io/tags/状态压缩/","url":"\\async\\tags\\状态压缩.json","count":1}],"categories":[{"name":"动态规划","permalink":"http://lzy-foenix.github.io/categories/动态规划/","url":"\\async\\categories\\动态规划.json","count":11}],"url":"\\async\\posts\\2015\\04\\19\\BZOJ-2734-HNOI2012-集合选数.json","date":1429450652000,"path":{"year":2015,"month":4,"day":19,"name":"BZOJ-2734-HNOI2012-集合选数"},"title":"BZOJ-2734[HNOI2012]集合选数","permalink":"http://lzy-foenix.github.io/2015/04/19/BZOJ-2734-HNOI2012-集合选数/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>由于不能选2x 和 3x 所以我们可以构造出这样的矩阵</p>\n<blockquote>\n<p>1 3 9….<br>2 6 18….<br>4 12 36….<br>8 24 72….<br>.<br>.</p>\n</blockquote>\n<p>然后就是选择这个矩阵中不相邻若干数的方案数，然后我们发现这个矩阵最多有11行，那么就只状压DP了。然而我们注意到这个矩阵中没有5,7，以及5的倍数和7的倍数，根据乘法原理，没有什么数，就把这个数当成矩阵中的第一个元素，然后将若干矩阵相乘得出答案。具体分析在代码中很清楚。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">100005</span>,mod=<span class=\"number\">1000000001</span>;</div><div class=\"line\"></div><div class=\"line\">LL Ans;</div><div class=\"line\"><span class=\"keyword\">int</span> N;</div><div class=\"line\"><span class=\"keyword\">int</span> Bin[<span class=\"number\">20</span>],a[<span class=\"number\">20</span>][<span class=\"number\">20</span>],b[<span class=\"number\">20</span>],f[<span class=\"number\">20</span>][<span class=\"number\">2048</span>];</div><div class=\"line\"><span class=\"keyword\">bool</span> flag[MAXN];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    Bin[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">20</span>;i++)Bin[i]=Bin[i<span class=\"number\">-1</span>]&lt;&lt;<span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">LL <span class=\"title\">Calc</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(b,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(b));</div><div class=\"line\">\ta[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=x;</div><div class=\"line\">\t<span class=\"comment\">//先构造矩阵的第一列</span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">18</span>;i++)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>]*<span class=\"number\">2</span> &lt;= N)</div><div class=\"line\">\t\t    a[i][<span class=\"number\">1</span>]=a[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>]*<span class=\"number\">2</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> a[i][<span class=\"number\">1</span>]=N+<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"comment\">//拓展出整个矩阵</span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">18</span>;i++)</div><div class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">2</span>;j&lt;=<span class=\"number\">11</span>;j++)</div><div class=\"line\">\t        <span class=\"keyword\">if</span>(a[i][j<span class=\"number\">-1</span>]*<span class=\"number\">3</span> &lt;= N)</div><div class=\"line\">\t\t\t\ta[i][j]=a[i][j<span class=\"number\">-1</span>]*<span class=\"number\">3</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span> a[i][j]=N+<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">18</span>;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=<span class=\"number\">11</span>;j++)&#123;</div><div class=\"line\">\t\t    <span class=\"keyword\">if</span>(a[i][j]&lt;=N)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//b[i]记录每一行的状态数，切状态是从0到b[i]的</span></div><div class=\"line\">\t\t\t\tb[i]+=Bin[j<span class=\"number\">-1</span>];</div><div class=\"line\">\t\t\t\tflag[a[i][j]]=<span class=\"number\">1</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=<span class=\"number\">18</span>;i++)</div><div class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=b[i];j++)</div><div class=\"line\">\t    \tf[i][j]=<span class=\"number\">0</span>;</div><div class=\"line\">\tf[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">18</span>;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>;x&lt;=b[i];x++)&#123;</div><div class=\"line\">\t\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> y=<span class=\"number\">0</span>;y&lt;=b[i+<span class=\"number\">1</span>];y++)</div><div class=\"line\">\t\t        <span class=\"keyword\">if</span>((x&amp;y)==<span class=\"number\">0</span> &amp;&amp; (y&amp;(y&lt;&lt;<span class=\"number\">1</span>))==<span class=\"number\">0</span>)</div><div class=\"line\">\t\t        \t<span class=\"comment\">//x&amp;y=0 证明两行之间没有两点处于同一列的地方，</span></div><div class=\"line\">\t\t        \t<span class=\"comment\">//(y&amp;(y&gt;&gt;1))=0 证明这一行中y这种状态有没有相邻的，那么就整体向右或者向左移一位，判断是否=0</span></div><div class=\"line\">\t\t            f[i+<span class=\"number\">1</span>][y]=(f[i][x]+f[i+<span class=\"number\">1</span>][y])%mod;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> f[<span class=\"number\">18</span>][<span class=\"number\">0</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N);</div><div class=\"line\">    Init(); Ans=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</div><div class=\"line\">        <span class=\"keyword\">if</span>(!flag[i])Ans=(Ans*Calc(i))%mod;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,Ans);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}