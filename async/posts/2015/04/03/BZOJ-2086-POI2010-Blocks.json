{"tags":[{"name":"单调栈","permalink":"http://lzy-foenix.github.io/tags/单调栈/","url":"\\async\\tags\\单调栈.json","count":1}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\04\\03\\BZOJ-2086-POI2010-Blocks.json","date":1428031523000,"path":{"year":2015,"month":4,"day":3,"name":"BZOJ-2086-POI2010-Blocks"},"title":"BZOJ-2086[POI2010]Blocks","permalink":"http://lzy-foenix.github.io/2015/04/03/BZOJ-2086-POI2010-Blocks/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>我们先得出一个结论，如果一段区间的平均值大于K,那么肯定这段区间可以通过一系列变换变成题目要求的，那么我们就让A[i]-K，为了找一段最长的区间，我们要求出他的前缀和，这样如果i&gt;j&amp;&amp;Sum[i]&gt;=Sum[j]那么j就比i要优，因为j到i区间的平均值大于K。然后用一个单调栈来维护一个递减的序列(因为我们是要找j)，然后指针移动，弹栈，找答案。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">1000005</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N,M,K;</div><div class=\"line\">LL A[MAXN],Sum[MAXN],q[MAXN],Ans=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tLL x;<span class=\"keyword\">char</span> ch;<span class=\"keyword\">bool</span> bo=<span class=\"literal\">false</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!<span class=\"built_in\">isdigit</span>(ch=getchar()))<span class=\"keyword\">if</span>(ch==<span class=\"string\">'-'</span>)<span class=\"keyword\">break</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(ch==<span class=\"string\">'-'</span>)bo=<span class=\"literal\">true</span>,x=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">else</span> x=ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">isdigit</span>(ch=getchar()))x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> bo==<span class=\"literal\">true</span>? (-x):x;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Work</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tAns=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tSum[i]=Sum[i<span class=\"number\">-1</span>]+A[i]-K;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> top=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)<span class=\"comment\">//一开始的时候q[top]是0，那么Sum[q[top]]&gt;Sum[i]代表从0到i这段区间的平均数是小于k的，那么 </span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Sum[q[top]]&gt;Sum[i])q[++top]=i;<span class=\"comment\">//我们就不要i之前的，从i考试，当top开始不为0之后同理，这是在不断的找合适的端点 </span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=N,j=top;i&gt;=<span class=\"number\">1</span>;i--)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(j&gt;=<span class=\"number\">0</span> &amp;&amp; Sum[i]&gt;=Sum[q[j]])j--; j++;</div><div class=\"line\">\t\t<span class=\"comment\">//还要跟0进行比较，看从一开始到i是否最优,j++ 是边界问题 </span></div><div class=\"line\">\t\tAns=max(Ans,i-q[j]);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\"</span>,Ans);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tN=Get();M=Get();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)A[i]=Get();</div><div class=\"line\">\t<span class=\"keyword\">while</span>(M--)&#123;</div><div class=\"line\">\t\tK=Get();</div><div class=\"line\">\t\tWork();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(M)<span class=\"built_in\">printf</span>(<span class=\"string\">\" \"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}