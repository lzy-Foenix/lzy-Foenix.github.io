{"tags":[{"name":"半平面交","permalink":"http://lzy-foenix.github.io/tags/半平面交/","url":"\\async\\tags\\半平面交.json","count":5}],"categories":[{"name":"计算几何","permalink":"http://lzy-foenix.github.io/categories/计算几何/","url":"\\async\\categories\\计算几何.json","count":12}],"url":"\\async\\posts\\2015\\03\\10\\计算几何初涉—半平面交.json","date":1425968921000,"path":{"year":2015,"month":3,"day":10,"name":"计算几何初涉—半平面交"},"title":"计算几何初涉—半平面交","permalink":"http://lzy-foenix.github.io/2015/03/10/计算几何初涉—半平面交/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>半平面交的定义就不详细解说，详情请见<br><a href=\"http://blog.csdn.net/accry/article/details/6070621\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/accry/article/details/6070621</a></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>直接上模板，来源 poj3130 How I Mathematician Wonder What<br>You Are!<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* poj-3130-How I Mathematician Wonder What You Are! */</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> n,m;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> x,y;</div><div class=\"line\">&#125;point[<span class=\"number\">55</span>],p[<span class=\"number\">55</span>],q[<span class=\"number\">55</span>];</div><div class=\"line\"><span class=\"comment\">//point读入数组,p为最终的多边形核的顶点,q为暂存的多边形核的顶点</span></div><div class=\"line\"><span class=\"keyword\">int</span> cCnt,curCnt;<span class=\"comment\">//最终的核的顶点数，暂时的核的顶点数 </span></div><div class=\"line\"><span class=\"keyword\">double</span> a,b,c;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getline</span><span class=\"params\">(node p1,node p2)</span></span>&#123;</div><div class=\"line\">\ta=p2.y-p1.y;</div><div class=\"line\">\tb=p1.x-p2.x;</div><div class=\"line\">\tc=p2.x*p1.y-p1.x*p2.y;</div><div class=\"line\">&#125;<span class=\"comment\">//推导p1,p2所在直线的方程,其实很简单,自己手推去 </span></div><div class=\"line\"><span class=\"function\">node <span class=\"title\">jiaodian</span><span class=\"params\">(node p1,node p2)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> u=<span class=\"built_in\">fabs</span>(a*p1.x+b*p1.y+c);</div><div class=\"line\">\t<span class=\"keyword\">double</span> v=<span class=\"built_in\">fabs</span>(a*p2.x+b*p2.y+c);</div><div class=\"line\">\tnode pt;</div><div class=\"line\">\tpt.x=(p1.x*v+p2.x*u)/(u+v);</div><div class=\"line\">\tpt.y=(p1.y*v+p2.y*u)/(u+v);</div><div class=\"line\">\t<span class=\"keyword\">return</span> pt;</div><div class=\"line\">&#125;<span class=\"comment\">//求线段Ax+By+C=0;和p1、p2所在直线的交点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cut</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tcurCnt=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"comment\">//注意下面的&lt;=0和&lt;0是逆时针顺序，要是题目中说是顺时针就&gt;=0,&gt;0; </span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=cCnt;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(a*p[i].x+b*p[i].y+c&lt;=<span class=\"number\">0</span>)q[++curCnt]=p[i];</div><div class=\"line\">\t\t<span class=\"comment\">// c由于精度问题，可能会偏小，所以有些点本应在右侧而没在,故应该接着判断</span></div><div class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a*p[i<span class=\"number\">-1</span>].x+b*p[i<span class=\"number\">-1</span>].y+c&lt;<span class=\"number\">0</span>)<span class=\"comment\">//如果p[i-1]在直线的右侧的话，</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//则将p[i],p[i-1]形成的直线与已知直线的交点作为核的一个顶点(这样的话，由于精度的问题，核的面积可能会有所减少)</span></div><div class=\"line\">\t\t\t\tq[++curCnt]=jiaodian(p[i],p[i<span class=\"number\">-1</span>]);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a*p[i+<span class=\"number\">1</span>].x+b*p[i+<span class=\"number\">1</span>].y+c&lt;<span class=\"number\">0</span>)<span class=\"comment\">//原理同上 </span></div><div class=\"line\">\t\t\t\tq[++curCnt]=jiaodian(p[i],p[i+<span class=\"number\">1</span>]);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;<span class=\"comment\">//上面的p q 尽量大写，本蒟蒻曾经跪了一下午... </span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=curCnt;i++)p[i]=q[i];</div><div class=\"line\">\tp[<span class=\"number\">0</span>]=q[curCnt]; p[curCnt+<span class=\"number\">1</span>]=q[<span class=\"number\">1</span>];</div><div class=\"line\">\tcCnt=curCnt;</div><div class=\"line\">\t<span class=\"comment\">//暂存核放入最终答案中 </span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)p[i]=point[i];</div><div class=\"line\">\tp[<span class=\"number\">0</span>]=p[n]; p[n+<span class=\"number\">1</span>]=p[<span class=\"number\">1</span>];cCnt=n;<span class=\"comment\">//cCnt是最终的答案 </span></div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</div><div class=\"line\">\t\tgetline(point[i],point[i+<span class=\"number\">1</span>]);<span class=\"comment\">//构建point[i],point[i+1]点所在的直线</span></div><div class=\"line\">\t\t<span class=\"comment\">//注意一定要是point，也就是原输入的数组，个人在这里跪过 </span></div><div class=\"line\">\t\tcut();<span class=\"comment\">//看这条直线所截的核的顶点</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\\n\"</span>,&amp;n)&amp;&amp;n)&#123;</div><div class=\"line\">\t\tcCnt=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf%lf\"</span>,&amp;point[i].x,&amp;point[i].y); point[n+<span class=\"number\">1</span>]=point[<span class=\"number\">1</span>];</div><div class=\"line\">\t\tsolve();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(!cCnt)<span class=\"built_in\">puts</span>(<span class=\"string\">\"0\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"1\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//如果在求面积的话，就利用p数组中存的点做叉积就可以了，注意正负 </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"其他题目\"><a href=\"#其他题目\" class=\"headerlink\" title=\"其他题目\"></a>其他题目</h3><p>poj 1474  poj 1279 poj 3335</p>\n"}