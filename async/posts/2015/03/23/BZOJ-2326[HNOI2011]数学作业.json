{"tags":[{"name":"矩阵快速幂","permalink":"http://lzy-foenix.github.io/tags/矩阵快速幂/","url":"\\async\\tags\\矩阵快速幂.json","count":3}],"categories":[{"name":"矩阵","permalink":"http://lzy-foenix.github.io/categories/矩阵/","url":"\\async\\categories\\矩阵.json","count":3}],"url":"\\async\\posts\\2015\\03\\23\\BZOJ-2326[HNOI2011]数学作业.json","date":1427113062000,"path":{"year":2015,"month":3,"day":23,"name":"BZOJ-2326[HNOI2011]数学作业"},"title":"BZOJ-2326[HNOI2011]数学作业","permalink":"http://lzy-foenix.github.io/2015/03/23/BZOJ-2326[HNOI2011]数学作业/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>很简单可以推出递推式：f[i]=f[i-1]*10^(log10(i)+1)+i；但是显然这个式子转换成矩阵要坑爹，那么我们就分析一下这个式子的特点，可以看出来10^(log10(i)+1)这个数是在一定范围内是定值，所以我们要分块矩阵快速幂，</p>\n<p>Ans[3]= f[i-1] i 1</p>\n<p>Martix[3][3]={<br>    10^(log10(i)+1) 0 0<br>    1               1 0<br>    0               1 1<br>}</p>\n<p>令Ans*Martix就可以了，恩注意如果一些地方漏掉取摸的话会爆long long (而且开了long long 我还是跪掉一个点，实在想不起来是哪里的问题了，就只好用unsigned long long 了…)</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\">LL N,mod,L;</div><div class=\"line\">LL F[<span class=\"number\">3</span>],LastAns=<span class=\"number\">0</span>,LastK;</div><div class=\"line\"><span class=\"keyword\">struct</span> Matrix&#123;</div><div class=\"line\">\tLL a[<span class=\"number\">5</span>][<span class=\"number\">5</span>];</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build1</span><span class=\"params\">(LL x)</span></span>&#123;</div><div class=\"line\">\t\ta[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=x;</div><div class=\"line\">\t\ta[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=a[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=a[<span class=\"number\">2</span>][<span class=\"number\">1</span>]=a[<span class=\"number\">2</span>][<span class=\"number\">2</span>]=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">build2</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)a[i][i]=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">3</span>;j++)<span class=\"built_in\">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class=\"string\">\" \"</span>;</div><div class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tMatrix <span class=\"keyword\">operator</span> * (<span class=\"keyword\">const</span> Matrix &amp;A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\tMatrix res; res.clear();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">3</span>;k++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">3</span>;j++)</div><div class=\"line\">\t\t\t\t\tres.a[i][j]+=((a[i][k]%mod)*(A.a[k][j]%mod))%mod,res.a[i][j]%=mod;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;Ans,Tmp;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">Pow</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\tLL ans=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=x;i++)ans*=<span class=\"number\">10</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> ans;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\">LL <span class=\"title\">my_min</span><span class=\"params\">(LL a,LL b)</span></span>&#123;<span class=\"keyword\">return</span> a&lt;b? a:b;&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Build_Work</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\tF[<span class=\"number\">0</span>]=LastAns;F[<span class=\"number\">1</span>]=Pow(x<span class=\"number\">-1</span>)%mod;F[<span class=\"number\">2</span>]=<span class=\"number\">1</span>;</div><div class=\"line\">\tTmp.clear(); Tmp.build1(Pow(x)%mod);</div><div class=\"line\">\tAns.clear(); Ans.build2();</div><div class=\"line\">\tLL k=my_min(Pow(x),N); k-=Pow(x<span class=\"number\">-1</span>);</div><div class=\"line\">\t<span class=\"keyword\">while</span>(k)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(k&amp;<span class=\"number\">1</span>)Ans=Ans*Tmp;</div><div class=\"line\">\t\tTmp=Tmp*Tmp;</div><div class=\"line\">\t\tk&gt;&gt;=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tLL t0=F[<span class=\"number\">0</span>]%mod,t1=F[<span class=\"number\">1</span>]%mod,t2=F[<span class=\"number\">2</span>]%mod;</div><div class=\"line\">\tF[<span class=\"number\">0</span>]=((t0*Ans.a[<span class=\"number\">0</span>][<span class=\"number\">0</span>])%mod+(t1*Ans.a[<span class=\"number\">1</span>][<span class=\"number\">0</span>])%mod+(t2*Ans.a[<span class=\"number\">2</span>][<span class=\"number\">0</span>])%mod)%mod;</div><div class=\"line\">\tF[<span class=\"number\">1</span>]=((t0*Ans.a[<span class=\"number\">0</span>][<span class=\"number\">1</span>])%mod+(t1*Ans.a[<span class=\"number\">1</span>][<span class=\"number\">1</span>])%mod+(t2*Ans.a[<span class=\"number\">2</span>][<span class=\"number\">1</span>])%mod)%mod;</div><div class=\"line\">\tF[<span class=\"number\">2</span>]=((t0*Ans.a[<span class=\"number\">0</span>][<span class=\"number\">2</span>])%mod+(t1*Ans.a[<span class=\"number\">1</span>][<span class=\"number\">2</span>])%mod+(t2*Ans.a[<span class=\"number\">2</span>][<span class=\"number\">2</span>])%mod)%mod;</div><div class=\"line\">\tLastAns=F[<span class=\"number\">0</span>]%mod;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld\"</span>,&amp;N,&amp;mod);</div><div class=\"line\">\tL=<span class=\"built_in\">log10</span>(N)+<span class=\"number\">1</span>;N++;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=L;i++)&#123;</div><div class=\"line\">\t\tBuild_Work(i);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,LastAns);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}