{"tags":[{"name":"莫比乌斯反演","permalink":"http://lzy-foenix.github.io/tags/莫比乌斯反演/","url":"\\async\\tags\\莫比乌斯反演.json","count":6}],"categories":[{"name":"数学","permalink":"http://lzy-foenix.github.io/categories/数学/","url":"\\async\\categories\\数学.json","count":24}],"url":"\\async\\posts\\2015\\03\\16\\BZOJ-2005-NOI2010-能量采集.json","date":1426460987000,"path":{"year":2015,"month":3,"day":16,"name":"BZOJ-2005-NOI2010-能量采集"},"title":"BZOJ-2005[NOI2010]能量采集","permalink":"http://lzy-foenix.github.io/2015/03/16/BZOJ-2005-NOI2010-能量采集/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>给定N,M求$<br>\\sum_{i=1}^n\\sum_{j=1}^mgcd(i,j)<br>$的加和，最后答案Ans*2-1，我们假设N&lt;M<br>下面我们来推导:<br>定义<br>$$<br>Ans=\\sum_{i=1}^{n}\\sum_{j=1}^{m}gcd(i,j)<br>$$<br>$$<br>=\\sum_{d=1}^{n}d\\cdot\\sum_{i=1}^{n}\\sum_{j=1}^{m}[gcd(i,j)=d]<br>$$<br>$$<br>=\\sum_{d=1}^{n}d\\cdot\\sum_{i=1}^{\\frac{n}{d}}\\sum_{j=1}^{\\frac{m}{d}}[gcd(i,j)=1]<br>$$<br>定义两个函数$f(x),F(x)$<br>$$f(x)=\\sum_{i=1}^{\\frac{n}{d}}\\sum_{j=1}^{\\frac{m}{d}}[gcd(i,j)=x]$$<br>$$F(x)=\\sum_{i=1}^{\\frac{n}{d}}\\sum_{j=1}^{\\frac{m}{d}}[x|gcd(i,j)]$$<br>推导可知 (此过程的推导可见BZOJ-2190[SDOI2008]仪仗队的推导)<br>$$F(p)=[\\frac{n}{pd}][\\frac{m}{pd}]$$<br>那么带入$f(x)$中<br>$$f(x)=\\sum_{x|p}^{p}\\mu(\\frac{p}{x})F(p)$$<br>$$=\\sum_{x|p}^{p}\\mu(\\frac{p}{x})[\\frac{n}{pd}][\\frac{m}{pd}]$$<br>$$f(1)=\\sum_{p=1}^{n}\\mu(\\frac{p}{x})[\\frac{n}{pd}][\\frac{m}{pd}]$$<br>带入Ans<br>$$Ans=\\sum_{d=1}^{n}d\\cdot \\sum_{p=1}^{n}\\mu(p)[\\frac{n}{pd}][\\frac{m}{pd}]$$<br>令$T=pd$<br>$$Ans=\\sum_{T=1}^{n}[\\frac{n}{T}][\\frac{m}{T}]\\sum_{d|T}^{n}d\\cdot \\mu(\\frac{T}{d})$$<br>下面是我自己对变换的一点理解，我们可以从上式中看到$d|T$，那么假设D=$\\frac{T}{d}$,那么$D|T$,这是显然的所以我们把D带入到原式中可以得到$\\sum_{D|T}^{N}\\frac{T}{D}\\cdot\\mu(D)$，然后我们有这样一个性质：$\\sum_{d|n}^{n} \\frac{\\mu(d)}{d}$=$\\frac{\\phi(n)}{n}$，然后变换一下$\\sum_{d|n}^{n}\\frac{\\mu(d)}{d}\\cdot n$=$\\phi(n)$,显而易见，那么$\\sum_{d|T}^{n}\\mu(\\frac{T}{d})\\cdot d$=$\\phi(T)$.<br>$$Ans=\\sum_{T=1}^{n}[\\frac{n}{T}][\\frac{m}{T}]\\cdot\\phi(T)\\blacksquare$$</p>\n<p>然后就是线性筛欧拉函数，然后O(n{1/2})求和</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">100005</span>;</div><div class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> N,M,last,ans,fai[MAXN],sum[MAXN],prime[MAXN],tot;</div><div class=\"line\"><span class=\"keyword\">bool</span> not_prime[MAXN];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Getmu</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tfai[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(!not_prime[i])&#123;</div><div class=\"line\">\t\t\tprime[++tot]=i; fai[i]=i<span class=\"number\">-1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;prime[j]*i&lt;=N;j++)&#123;</div><div class=\"line\">\t\t\tnot_prime[prime[j]*i]=<span class=\"literal\">true</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i%prime[j]==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tfai[prime[j]*i]=fai[i]*prime[j]; <span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span> fai[i*prime[j]]=fai[i]*(prime[j]<span class=\"number\">-1</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)sum[i]=fai[i],sum[i]+=sum[i<span class=\"number\">-1</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld\"</span>,&amp;N,&amp;M);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(N&gt;M)swap(N,M); Getmu();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i=last+<span class=\"number\">1</span>)&#123;</div><div class=\"line\">\t\tlast=min(N/(N/i),M/(M/i));</div><div class=\"line\">\t\tans+=(sum[last]-sum[i<span class=\"number\">-1</span>])*(N/i)*(M/i);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,<span class=\"number\">2</span>*ans-N*M);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}