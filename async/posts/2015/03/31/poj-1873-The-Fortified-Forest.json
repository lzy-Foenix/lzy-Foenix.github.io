{"tags":[{"name":"凸包","permalink":"http://lzy-foenix.github.io/tags/凸包/","url":"\\async\\tags\\凸包.json","count":4}],"categories":[{"name":"计算几何","permalink":"http://lzy-foenix.github.io/categories/计算几何/","url":"\\async\\categories\\计算几何.json","count":12}],"url":"\\async\\posts\\2015\\03\\31\\poj-1873-The-Fortified-Forest.json","date":1427795662000,"path":{"year":2015,"month":3,"day":31,"name":"poj-1873-The-Fortified-Forest"},"title":"poj-1873-The_Fortified_Forest","permalink":"http://lzy-foenix.github.io/2015/03/31/poj-1873-The-Fortified-Forest/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>暴力枚举，然后做凸包，注意N=1和N=2的时候，一道水题，到现在还不知道WA在哪里…poj太狠了，根本不知道是哪里错了</p>\n<h3 id=\"正确姿势：\"><a href=\"#正确姿势：\" class=\"headerlink\" title=\"正确姿势：\"></a>正确姿势：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span>  </span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span>  </span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span>  </span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sqr(a) ((a) * (a))  </span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> dis(a, b) sqrt(sqr(a.x - b.x) + sqr(a.y - b.y))  </span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN = <span class=\"number\">20</span>;  </div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"built_in\">acos</span>(<span class=\"number\">-1.0</span>);  </div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF = <span class=\"number\">0x7fffffff</span>;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">struct</span> Point &#123;  </div><div class=\"line\">    <span class=\"keyword\">double</span> x;  </div><div class=\"line\">    <span class=\"keyword\">double</span> y;  </div><div class=\"line\">    <span class=\"keyword\">int</span> v;  </div><div class=\"line\">    <span class=\"keyword\">int</span> l;  </div><div class=\"line\">    Point(<span class=\"keyword\">double</span> a = <span class=\"number\">0</span>, <span class=\"keyword\">double</span> b = <span class=\"number\">0</span>) : x(a), y(b) &#123;&#125;  </div><div class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (<span class=\"keyword\">const</span> Point &amp;l, <span class=\"keyword\">const</span> Point &amp;r) &#123;  </div><div class=\"line\">        <span class=\"keyword\">return</span> l.y &lt; r.y || (l.y == r.y &amp;&amp; l.x &lt; r.x);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125; p[MAXN], ch[MAXN * <span class=\"number\">2</span>], tmp[MAXN];  </div><div class=\"line\"><span class=\"comment\">// p, point   ch, convex hull  </span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">mult</span><span class=\"params\">(Point a, Point b, Point o)</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">return</span> (a.x - o.x) * (b.y - o.y) &gt;= (b.x - o.x) * (a.y - o.y);  </div><div class=\"line\">&#125;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">Graham</span><span class=\"params\">(Point p[], <span class=\"keyword\">int</span> n, Point res[])</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">int</span> top = <span class=\"number\">1</span>;  </div><div class=\"line\">    sort(p, p + n);  </div><div class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </div><div class=\"line\">    res[<span class=\"number\">0</span>] = p[<span class=\"number\">0</span>];  </div><div class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </div><div class=\"line\">    res[<span class=\"number\">1</span>] = p[<span class=\"number\">1</span>];  </div><div class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">2</span>) <span class=\"keyword\">return</span> dis(p[<span class=\"number\">0</span>], p[<span class=\"number\">1</span>]) * <span class=\"number\">2</span>;  </div><div class=\"line\">    res[<span class=\"number\">2</span>] = p[<span class=\"number\">2</span>];  </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; n; i++) &#123;  </div><div class=\"line\">        <span class=\"keyword\">while</span> (top &amp;&amp; (mult(p[i], res[top], res[top - <span class=\"number\">1</span>])))  </div><div class=\"line\">            top--;  </div><div class=\"line\">        res[++top] = p[i];  </div><div class=\"line\">    &#125;  </div><div class=\"line\">    <span class=\"keyword\">int</span> len = top;  </div><div class=\"line\">    res[++top] = p[n - <span class=\"number\">2</span>];  </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">3</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;  </div><div class=\"line\">        <span class=\"keyword\">while</span> (top != len &amp;&amp; (mult(p[i], res[top], res[top - <span class=\"number\">1</span>])))  </div><div class=\"line\">            top--;  </div><div class=\"line\">        res[++top] = p[i];  </div><div class=\"line\">    &#125;  </div><div class=\"line\">    <span class=\"comment\">// c  </span></div><div class=\"line\">    <span class=\"keyword\">double</span> c = dis(res[<span class=\"number\">0</span>], res[top - <span class=\"number\">1</span>]);  </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; top - <span class=\"number\">1</span>; i++)  </div><div class=\"line\">        c += dis(res[i], res[i + <span class=\"number\">1</span>]);  </div><div class=\"line\">    <span class=\"keyword\">return</span> c;  </div><div class=\"line\">&#125;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">int</span> n, cas = <span class=\"number\">0</span>;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n) &amp;&amp; n) &#123;  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)  </div><div class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf%lf%d%d\"</span>, &amp;p[i].x, &amp;p[i].y, &amp;p[i].v, &amp;p[i].l);  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"keyword\">int</span> min_cut = INF, min_val = INF, ans = <span class=\"number\">0</span>;  </div><div class=\"line\">        <span class=\"keyword\">double</span> res_len = <span class=\"number\">0</span>;  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> bit = <span class=\"number\">0</span>; bit &lt; (<span class=\"number\">1</span> &lt;&lt; n); bit++) &#123;  </div><div class=\"line\">            <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>, cut_val = <span class=\"number\">0</span>;  </div><div class=\"line\">            <span class=\"keyword\">double</span> cut_len = <span class=\"number\">0</span>;  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)  </div><div class=\"line\">                <span class=\"keyword\">if</span> (bit &amp; (<span class=\"number\">1</span> &lt;&lt; i)) &#123;  </div><div class=\"line\">                    cut_len += p[i].l;  </div><div class=\"line\">                    cut_val += p[i].v;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">                <span class=\"keyword\">else</span> &#123;  </div><div class=\"line\">                    tmp[res].x = p[i].x;  </div><div class=\"line\">                    tmp[res++].y = p[i].y;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"keyword\">if</span> (cut_val &gt; min_val) <span class=\"keyword\">continue</span>;  </div><div class=\"line\">            <span class=\"keyword\">double</span> c = Graham(tmp, res, ch);  </div><div class=\"line\">            <span class=\"keyword\">if</span> (cut_len &gt;= c)   </div><div class=\"line\">                <span class=\"keyword\">if</span> (cut_val &lt; min_val || (cut_val == min_val &amp;&amp; n - res &lt; min_cut)) &#123;  </div><div class=\"line\">                    ans = bit;  </div><div class=\"line\">                    min_val = cut_val;  </div><div class=\"line\">                    min_cut = n - res;  </div><div class=\"line\">                    res_len = cut_len - c;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">        &#125;     </div><div class=\"line\">        <span class=\"keyword\">if</span> (cas) <span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);  </div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Forest %d\\n\"</span>, ++cas);  </div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Cut these trees:\"</span>);  </div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)  </div><div class=\"line\">            <span class=\"keyword\">if</span> (ans &amp; (<span class=\"number\">1</span> &lt;&lt; i))  </div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\" %d\"</span>, i + <span class=\"number\">1</span>);  </div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nExtra wood: %.2f\\n\"</span>, res_len);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>###我的姿势：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> eps 1e-10</span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">double</span> DO;</div><div class=\"line\"><span class=\"keyword\">int</span> N,MinV,Tmp,len,Ans[<span class=\"number\">20</span>];</div><div class=\"line\"><span class=\"keyword\">double</span> MinL;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> x,y,l;</div><div class=\"line\">\t<span class=\"keyword\">int</span> v,pi;</div><div class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (<span class=\"keyword\">const</span> node &amp;A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(x==A.x)<span class=\"keyword\">return</span> y&lt;A.y;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> x&lt;A.x;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;point[<span class=\"number\">25</span>],P[<span class=\"number\">25</span>],Stack[<span class=\"number\">25</span>];</div><div class=\"line\"><span class=\"keyword\">bool</span> flag[<span class=\"number\">25</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Clear</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tMinV=<span class=\"number\">0x7fffffff</span>;</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(point,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(point));</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(flag,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(flag));</div><div class=\"line\">\t<span class=\"built_in\">memset</span>(Stack,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(Stack));</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">Dis</span><span class=\"params\">(node p1,node p2)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">sqrt</span>((DO)(p1.x-p2.x)*(DO)(p1.x-p2.x)+(DO)(p1.y-p2.y)*(DO)(p1.y-p2.y));</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">Cross</span><span class=\"params\">(node p0,node p1,node p2)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> (p1.x-p0.x)*(p2.y-p0.y)&lt;=(p1.y-p0.y)*(p2.x-p0.x);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Judge</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> nowL=<span class=\"number\">0.0</span>;</div><div class=\"line\">\tTmp=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> top=<span class=\"number\">1</span>,nowV=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(!flag[i])P[Tmp++]=point[i];</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> nowL+=point[i].l,nowV+=point[i].v;<span class=\"comment\">//被砍的树</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tsort(P,P+Tmp);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Tmp==<span class=\"number\">0</span>)<span class=\"keyword\">return</span>;</div><div class=\"line\">\tStack[<span class=\"number\">0</span>]=P[<span class=\"number\">0</span>];</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Tmp==<span class=\"number\">1</span>)<span class=\"keyword\">return</span>;</div><div class=\"line\">\tStack[<span class=\"number\">1</span>]=P[<span class=\"number\">1</span>];</div><div class=\"line\">\t<span class=\"keyword\">if</span>(Tmp==<span class=\"number\">2</span>)&#123;</div><div class=\"line\">\t\tnowL-=Dis(Stack[<span class=\"number\">0</span>],Stack[<span class=\"number\">1</span>])*<span class=\"number\">2.0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(nowL&lt;eps)<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(nowV&lt;MinV)&#123;</div><div class=\"line\">\t\t\tMinV=nowV; MinL=nowL; Ans[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(flag[i])Ans[++Ans[<span class=\"number\">0</span>]]=i+<span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;Tmp;i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span>(top &amp;&amp; Cross(Stack[top<span class=\"number\">-1</span>],Stack[top],P[i]))top--;</div><div class=\"line\">\t\t\tStack[++top]=P[i];</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> t=top;</div><div class=\"line\">\t\tStack[++top]=P[Tmp<span class=\"number\">-2</span>];</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=Tmp<span class=\"number\">-3</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span>(top!=t &amp;&amp; Cross(Stack[top<span class=\"number\">-1</span>],Stack[top],P[i]))top--;</div><div class=\"line\">\t\t\tStack[++top]=P[i];</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tnowL-=Dis(Stack[<span class=\"number\">0</span>],Stack[top]);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;top;i++)</div><div class=\"line\">\t\t    nowL-=Dis(Stack[i],Stack[i+<span class=\"number\">1</span>]);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(nowL&lt;eps)<span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(nowV&lt;MinV)&#123;</div><div class=\"line\">\t\t\tMinV=nowV; MinL=nowL; Ans[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(flag[i])Ans[++Ans[<span class=\"number\">0</span>]]=i+<span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> sum,<span class=\"keyword\">int</span> num)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(sum&gt;MinV)<span class=\"keyword\">return</span>;</div><div class=\"line\">\tJudge(num);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;i&lt;N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(!flag[i])&#123;</div><div class=\"line\">\t\t\tflag[i]=<span class=\"literal\">true</span>;</div><div class=\"line\">\t\t\tDFS(i+<span class=\"number\">1</span>,sum+point[i].v,num+<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\tflag[i]=<span class=\"literal\">false</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> tot=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N))&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(N==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\tClear();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf%lf%d%lf\"</span>,&amp;point[i].x,&amp;point[i].y,&amp;point[i].v,&amp;point[i].l),point[i].pi=i+<span class=\"number\">1</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(N==<span class=\"number\">2</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(point[<span class=\"number\">0</span>].v&lt;point[<span class=\"number\">1</span>].v)Ans[<span class=\"number\">0</span>]=<span class=\"number\">1</span>,Ans[<span class=\"number\">1</span>]=<span class=\"number\">1</span>,MinL=point[<span class=\"number\">0</span>].l;</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span> Ans[<span class=\"number\">0</span>]=<span class=\"number\">1</span>,Ans[<span class=\"number\">1</span>]=<span class=\"number\">2</span>,MinL=point[<span class=\"number\">1</span>].l;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tDFS(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Forest %d\\n\"</span>,tot++);</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Cut these trees: \"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=Ans[<span class=\"number\">0</span>];i++)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,Ans[i]); <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Extra wood: %.2f\\n\\n\"</span>,MinL);</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}