{"tags":[{"name":"凸包","permalink":"http://lzy-foenix.github.io/tags/凸包/","url":"\\async\\tags\\凸包.json","count":4}],"categories":[{"name":"计算几何","permalink":"http://lzy-foenix.github.io/categories/计算几何/","url":"\\async\\categories\\计算几何.json","count":12}],"url":"\\async\\posts\\2015\\03\\31\\poj-3348-Cows.json","date":1427809420000,"path":{"year":2015,"month":3,"day":31,"name":"poj-3348-Cows"},"title":"poj-3348-Cows","permalink":"http://lzy-foenix.github.io/2015/03/31/poj-3348-Cows/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h3><p>给出一些点，求一个凸包，凸包内的面积中没50单位就放一头牛，问可以放几头牛。</p>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>求出凸包然后用面积除以50，就可以了。强烈吐槽：poj真的是太慢了！！！，10次进去有8次都进不去！！！！！！<i class=\"fa fa-terminal fa-2x\"></i>   还是Virtual Judge好，poj是我真心见到过的国内最慢的网站。。。。我们要追求速度啊，有木有！<i class=\"fa fa-bolt fa-2x\"></i><i class=\"fa fa-bolt fa-2x\"></i><i class=\"fa fa-bolt fa-2x\"></i></p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> x,y;</div><div class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (<span class=\"keyword\">const</span> node &amp;A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(x==A.x)<span class=\"keyword\">return</span> y&lt;A.y;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> x&lt;A.x;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;point[<span class=\"number\">10005</span>],res[<span class=\"number\">10005</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Cross</span><span class=\"params\">(node p0,node p1,node p2)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> (p2.x-p0.x)*(p1.y-p0.y)&gt;=(p1.x-p0.x)*(p2.y-p0.y);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">Area</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> ans=<span class=\"number\">0.0</span>;</div><div class=\"line\">\tans+=res[<span class=\"number\">0</span>].x*res[n].y-res[<span class=\"number\">0</span>].y*res[n].x;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</div><div class=\"line\">\t\tans+=res[i].x*res[i+<span class=\"number\">1</span>].y-res[i].y*res[i+<span class=\"number\">1</span>].x;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">fabs</span>(ans/<span class=\"number\">2.0</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">Graham_scan</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tsort(point,point+N);</div><div class=\"line\">\t<span class=\"keyword\">int</span> top=<span class=\"number\">1</span>;</div><div class=\"line\">\tres[<span class=\"number\">0</span>]=point[<span class=\"number\">0</span>];</div><div class=\"line\">\t<span class=\"keyword\">if</span>(N==<span class=\"number\">1</span>)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\tres[<span class=\"number\">1</span>]=point[<span class=\"number\">1</span>];</div><div class=\"line\">\t<span class=\"keyword\">if</span>(N==<span class=\"number\">2</span>)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\tres[<span class=\"number\">2</span>]=point[<span class=\"number\">2</span>];</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(top &amp;&amp; Cross(res[top<span class=\"number\">-1</span>],res[top],point[i]))top--;</div><div class=\"line\">\t\tres[++top]=point[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> len=top;</div><div class=\"line\">\tres[++top]=point[N<span class=\"number\">-2</span>];</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=N<span class=\"number\">-3</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</div><div class=\"line\">        <span class=\"keyword\">while</span>(top!=len &amp;&amp; Cross(res[top<span class=\"number\">-1</span>],res[top],point[i]))top--;</div><div class=\"line\">\t\tres[++top]=point[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> Area(top);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lf%lf\"</span>,&amp;point[i].x,&amp;point[i].y);</div><div class=\"line\">    <span class=\"keyword\">double</span> Ans=Graham_scan();</div><div class=\"line\">    <span class=\"keyword\">int</span> k=Ans/<span class=\"number\">50</span>;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,k);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}