{"tags":[{"name":"可持久化Trie树","permalink":"http://lzy-foenix.github.io/tags/可持久化Trie树/","url":"\\async\\tags\\可持久化Trie树.json","count":1}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\03\\21\\BZOJ-3261-最大异或和.json","date":1426922208000,"path":{"year":2015,"month":3,"day":21,"name":"BZOJ-3261-最大异或和"},"title":"BZOJ-3261-最大异或和","permalink":"http://lzy-foenix.github.io/2015/03/21/BZOJ-3261-最大异或和/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>可持久化Trie树是 <del>什么鬼</del> 好东西。很强大，蒟蒻我果断不大会= =。<br><a href=\"http://www.tuicool.com/articles/vIfMNnQ\" target=\"_blank\" rel=\"external\">一篇比较详细的题解</a><br>可持久化Trie树又叫函数式Trie树，跟函数式线段树(主席树)差不多，比较巧妙的。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">600005</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N,M,T,a[MAXN*<span class=\"number\">25</span>][<span class=\"number\">2</span>],s[MAXN*<span class=\"number\">25</span>],root[MAXN],b[MAXN],tot,l,r;</div><div class=\"line\"><span class=\"keyword\">char</span> opt[<span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> x;<span class=\"keyword\">char</span> ch;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!<span class=\"built_in\">isdigit</span>(ch=getchar())); x=ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>( <span class=\"built_in\">isdigit</span>(ch=getchar()))x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> x;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> &amp;y,<span class=\"keyword\">int</span> Num,<span class=\"keyword\">int</span> d)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> p=(Num&gt;&gt;d)&amp;<span class=\"number\">1</span>; s[y=++tot]=s[x]+<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(d&lt;<span class=\"number\">0</span>)<span class=\"keyword\">return</span>;</div><div class=\"line\">\ta[y][p^<span class=\"number\">1</span>]=a[x][p^<span class=\"number\">1</span>];</div><div class=\"line\">\tinsert(a[x][p],a[y][p],Num,d<span class=\"number\">-1</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Query</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> Num,<span class=\"keyword\">int</span> d)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(d&lt;<span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> p=(Num&gt;&gt;d)&amp;<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(s[a[y][p^<span class=\"number\">1</span>]]-s[a[x][p^<span class=\"number\">1</span>]])<span class=\"keyword\">return</span> (<span class=\"number\">1</span>&lt;&lt;d)+Query(a[x][p^<span class=\"number\">1</span>],a[y][p^<span class=\"number\">1</span>],Num,d<span class=\"number\">-1</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> Query(a[x][p],a[y][p],Num,d<span class=\"number\">-1</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tN=Get(); M=Get();</div><div class=\"line\">\tinsert(root[<span class=\"number\">0</span>],root[<span class=\"number\">1</span>],b[<span class=\"number\">1</span>],<span class=\"number\">24</span>);N++;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=N;i++)</div><div class=\"line\">\t\tT=Get(),b[i]=b[i<span class=\"number\">-1</span>]^T,insert(root[i<span class=\"number\">-1</span>],root[i],b[i],<span class=\"number\">24</span>);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,opt);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(opt[<span class=\"number\">0</span>]==<span class=\"string\">'A'</span>)</div><div class=\"line\">\t\t\tT=Get(),N++,insert(root[N<span class=\"number\">-1</span>],root[N],b[N]=b[N<span class=\"number\">-1</span>]^T,<span class=\"number\">24</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> </div><div class=\"line\">\t\t\tl=Get(),r=Get(),T=Get(),<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Query(root[l<span class=\"number\">-1</span>],root[r],b[N]^T,<span class=\"number\">24</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}