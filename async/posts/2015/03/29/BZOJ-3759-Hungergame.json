{"tags":[{"name":"博弈论","permalink":"http://lzy-foenix.github.io/tags/博弈论/","url":"\\async\\tags\\博弈论.json","count":3}],"categories":[{"name":"数学","permalink":"http://lzy-foenix.github.io/categories/数学/","url":"\\async\\categories\\数学.json","count":24}],"url":"\\async\\posts\\2015\\03\\29\\BZOJ-3759-Hungergame.json","date":1427632439000,"path":{"year":2015,"month":3,"day":29,"name":"BZOJ-3759-Hungergame"},"title":"BZOJ-3759-Hungergame","permalink":"http://lzy-foenix.github.io/2015/03/29/BZOJ-3759-Hungergame/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解:\"></a>题解:</h3><p>博弈论真是深明大义啊。。。。</p>\n<p>看到过一篇论文，上面有个例题思想跟这个差不多，我们只需要考虑最后的情况，如果存在一种情况使得异或和为0，那么肯定我们可以到达这种状态。</p>\n<p>假如这n个箱子的ai的异或和全部为0那么先手可以将这n个箱子全部打开，于是剩下的局面就是一个Nim游戏了，因为异或和为0，所以后手（在Nim游戏中）必胜，而这里先手通过将箱子全部打开这个操作，使得自己在Nim游戏中变为后手。所以这种局面是先手必胜。<br>然后再假设N个箱子不存在任意一种子集使得这个子集的元素的异或和为0. 那么这时候后手有必胜策略。一开始，先手肯定要打开箱子，无论打开多少个箱子，他们的异或和都不为零，所以在这种Nim游戏中，先手必胜，而这里先手通过开箱子已经变成了后手了，所以这时候先手必败。<br>然后再来看这个算法，如果我能找到一个子集使得其异或和等于零，然后剩下的无论怎么取都不能做到异或和为零，那么先手就必胜了对吗？恩，但是为什么我能保证剩下的怎么都做不到异或和为零呢，比如说我现在已经找到一个子集使得其异或和为0，然后先手可将这些箱子全部打开，如果剩余的箱子中还有异或和为0的，就把它们也打开，于是后手就必败了。<br>于是我们2^n dfs 枚举子集。看看他们的异或和是否为0。如果存在一个，就Yes.如果不存在这样的子集，就No.</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">int</span> T,N;</div><div class=\"line\">LL a[<span class=\"number\">25</span>],ans,Min=<span class=\"number\">0x7fffffff</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> num)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(num!=<span class=\"number\">0</span>)Min=Min&lt;ans? Min:ans;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tans^=a[i];</div><div class=\"line\">\t\tDFS(i+<span class=\"number\">1</span>,num+<span class=\"number\">1</span>);</div><div class=\"line\">\t\tans^=a[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;T);</div><div class=\"line\">    <span class=\"keyword\">while</span>(T--)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;N);ans=<span class=\"number\">0</span>; Min=<span class=\"number\">0x7fffffff</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;a[i]);</div><div class=\"line\">\t\tDFS(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(Min==<span class=\"number\">0</span>)<span class=\"built_in\">puts</span>(<span class=\"string\">\"Yes\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"No\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}