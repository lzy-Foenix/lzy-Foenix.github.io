{"tags":[{"name":"AC自动机","permalink":"http://lzy-foenix.github.io/tags/AC自动机/","url":"\\async\\tags\\AC自动机.json","count":2}],"categories":[{"name":"字符串","permalink":"http://lzy-foenix.github.io/categories/字符串/","url":"\\async\\categories\\字符串.json","count":2}],"url":"\\async\\posts\\2015\\03\\29\\poj-2778-DNA-Sequence.json","date":1427627221000,"path":{"year":2015,"month":3,"day":29,"name":"poj-2778-DNA-Sequence"},"title":"poj-2778-DNA_Sequence","permalink":"http://lzy-foenix.github.io/2015/03/29/poj-2778-DNA-Sequence/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>跪AC自动机加dp加矩阵。。。<br><a href=\"http://55242.cf/\" target=\"_blank\" rel=\"external\">Orz_jsx</a>把我讲明白了,说到底还是不太明白转移这回事，假设我们有AAB，AB，B,这些字符串，可以构造出这么一棵Trie树<img src=\"http://www.mftp.info/20150201/1427629508x2031200355.png\" alt=\"\">通过这个构造矩阵关键就是状态的转移，对于编号为now的点next[now][‘A’,’C’,’G’,’T’]的下一个点不是病毒串，那么就在矩阵a[now][next[now][j]]++，表示从now转移到next[now][j]有一条路径。这样以此建立矩阵，然后自乘m次，把矩阵第一行再加起来。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod=<span class=\"number\">100000</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\"><span class=\"keyword\">char</span> ch[<span class=\"number\">15</span>];</div><div class=\"line\"><span class=\"keyword\">struct</span> Matrix&#123;</div><div class=\"line\">\tLL a[<span class=\"number\">105</span>][<span class=\"number\">105</span>],n;</div><div class=\"line\">\tMatrix()&#123;&#125;</div><div class=\"line\">\tMatrix(<span class=\"keyword\">int</span> m)&#123;</div><div class=\"line\">\t\tn=m;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;++j)</div><div class=\"line\">\t\t\t\ta[i][j]=<span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tMatrix <span class=\"keyword\">operator</span> * (<span class=\"keyword\">const</span> Matrix &amp;A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\tMatrix res=Matrix(n);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</div><div class=\"line\">\t\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</div><div class=\"line\">\t\t        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</div><div class=\"line\">\t\t            res.a[i][j]+=a[i][k]*A.a[k][j],res.a[i][j]%=mod;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> next[<span class=\"number\">105</span>][<span class=\"number\">4</span>],fail[<span class=\"number\">105</span>],root,L;</div><div class=\"line\">\t<span class=\"keyword\">bool</span> End[<span class=\"number\">105</span>];</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">new_node</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)next[L][i]=<span class=\"number\">-1</span>;</div><div class=\"line\">\t\tEnd[L++]=<span class=\"literal\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> L<span class=\"number\">-1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;L=<span class=\"number\">0</span>;root=new_node();&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">idx</span><span class=\"params\">(<span class=\"keyword\">char</span> ch)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(ch)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'A'</span>:<span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'C'</span>:<span class=\"keyword\">return</span> <span class=\"number\">1</span>;<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'G'</span>:<span class=\"keyword\">return</span> <span class=\"number\">2</span>;<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'T'</span>:<span class=\"keyword\">return</span> <span class=\"number\">3</span>;<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">char</span> *s)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> len=<span class=\"built_in\">strlen</span>(s),now=root,k=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;i++)&#123;</div><div class=\"line\">\t\t\tk=idx(s[i]);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(next[now][k]==<span class=\"number\">-1</span>)next[now][k]=new_node();</div><div class=\"line\">\t\t\tnow=next[now][k];</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tEnd[now]=<span class=\"literal\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Make_fail</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;Q;</div><div class=\"line\">\t\tfail[root]=root;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(next[root][i]==<span class=\"number\">-1</span>)next[root][i]=root;</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tfail[next[root][i]]=root;</div><div class=\"line\">\t\t\t\tQ.push(next[root][i]);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(!Q.empty())&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> now=Q.front(); Q.pop();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(End[fail[now]])End[now]=<span class=\"literal\">true</span>;<span class=\"comment\">//如果fail指针指向的点是危险的，那么这个点也是危险的</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(next[now][i]==<span class=\"number\">-1</span>)next[now][i]=next[fail[now]][i];</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\tfail[next[now][i]]=next[fail[now]][i];</div><div class=\"line\">\t\t\t\t\tQ.push(next[now][i]);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\">Matrix <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tMatrix res=Matrix(L);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;L;i++)</div><div class=\"line\">\t\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)</div><div class=\"line\">\t\t        <span class=\"keyword\">if</span>(!End[next[i][j]])</div><div class=\"line\">\t\t            res.a[i][next[i][j]]++;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;AC;</div><div class=\"line\"><span class=\"function\">Matrix <span class=\"title\">Quick_muti</span><span class=\"params\">(Matrix a,<span class=\"keyword\">int</span> k)</span></span>&#123;</div><div class=\"line\">\tMatrix res=Matrix(a.n);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;a.n;i++)res.a[i][i]=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(k)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(k &amp; <span class=\"number\">1</span>)res=res*a;</div><div class=\"line\">\t\ta=a*a;</div><div class=\"line\">\t\tk&gt;&gt;=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> N,M;</div><div class=\"line\">    <span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;N,&amp;M))&#123;</div><div class=\"line\">\t\tAC.init();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</div><div class=\"line\">\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,ch),AC.insert(ch);</div><div class=\"line\">\t\tAC.Make_fail();</div><div class=\"line\">\t\tMatrix A=AC.Get();</div><div class=\"line\">\t\tA=Quick_muti(A,M);</div><div class=\"line\">\t\tLL res=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;A.n;i++)res+=A.a[<span class=\"number\">0</span>][i],res%=mod;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,res);</div><div class=\"line\">\t&#125;</div><div class=\"line\">    fclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">    fclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}