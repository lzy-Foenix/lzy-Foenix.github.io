{"tags":[{"name":"线段树区间染色","permalink":"http://lzy-foenix.github.io/tags/线段树区间染色/","url":"\\async\\tags\\线段树区间染色.json","count":2}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\03\\14\\hdu-1698-Just a Hook.json","date":1426306388000,"path":{"year":2015,"month":3,"day":14,"name":"hdu-1698-Just a Hook"},"title":"Hdu-1698-Just a Hook","permalink":"http://lzy-foenix.github.io/2015/03/14/hdu-1698-Just a Hook/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意:\"></a>题目大意:</h3><p>给出一个N长度的数列，数列中的每个数一开始都是1，然后给出Q个操作，每个操作有一个x,y,z，意思是把从x到y的节点的权值改成z。最后问所有的权值和。</p>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>线段树的区间染色问题</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;cstdio&gt;</div><div class=\"line\">#include &lt;cstdlib&gt;</div><div class=\"line\">#include &lt;cstring&gt;</div><div class=\"line\">#include &lt;set&gt;</div><div class=\"line\">#include &lt;cmath&gt;</div><div class=\"line\">#include &lt;queue&gt;</div><div class=\"line\">#include &lt;ctime&gt;</div><div class=\"line\">#include &lt;iostream&gt;</div><div class=\"line\">#include &lt;algorithm&gt;</div><div class=\"line\">#define L(x) (x&lt;&lt;1)</div><div class=\"line\">#define R(x) (x&lt;&lt;1|1)</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int MAXN=100005;</div><div class=\"line\">struct node&#123;</div><div class=\"line\">\tint l,r,val,sum;//val 记录区间内的元素值，如果区间内的值不同，val=0，sum记录区间和。 </div><div class=\"line\">&#125;LineTree[MAXN&lt;&lt;2];</div><div class=\"line\">int T,N,Q,x,y,z;</div><div class=\"line\">inline int Get()&#123;</div><div class=\"line\">\tint x;char ch;</div><div class=\"line\">\twhile(!isdigit(ch=getchar()));</div><div class=\"line\">\tx=ch-48;</div><div class=\"line\">\twhile(isdigit(ch=getchar()))x=x*10+ch-48;</div><div class=\"line\">\treturn x;</div><div class=\"line\">&#125;</div><div class=\"line\">void Build(int t,int l,int r)&#123;</div><div class=\"line\">\tint mid=(l+r)&gt;&gt;1;</div><div class=\"line\">\tLineTree[t].l=l; LineTree[t].r=r; LineTree[t].val=1;</div><div class=\"line\">\tif(r-1==l)&#123;</div><div class=\"line\">\t\tLineTree[t].sum=1; return;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tBuild(L(t),l,mid); Build(R(t),mid,r);</div><div class=\"line\">\tLineTree[t].sum=LineTree[L(t)].sum+LineTree[R(t)].sum;</div><div class=\"line\">&#125;</div><div class=\"line\">void Updata(int t,int l,int r,int val)&#123;</div><div class=\"line\">\tint mid=(LineTree[t].l+LineTree[t].r)&gt;&gt;1;</div><div class=\"line\">\tif(l==LineTree[t].l &amp;&amp; r==LineTree[t].r)&#123;</div><div class=\"line\">\t\tLineTree[t].val=val;</div><div class=\"line\">\t\tLineTree[t].sum=(r-l)*val;</div><div class=\"line\">\t\treturn;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tif(LineTree[t].val&gt;0)&#123;</div><div class=\"line\">\t\tLineTree[L(t)].val=LineTree[t].val;</div><div class=\"line\">\t\tLineTree[L(t)].sum=(LineTree[L(t)].r-LineTree[L(t)].l)*LineTree[t].val;</div><div class=\"line\">\t\tLineTree[R(t)].val=LineTree[t].val;</div><div class=\"line\">\t\tLineTree[R(t)].sum=(LineTree[R(t)].r-LineTree[R(t)].l)*LineTree[t].val;</div><div class=\"line\">\t\tLineTree[t].val=0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tif(mid&lt;=l)Updata(R(t),l,r,val);</div><div class=\"line\">\telse if(mid&gt;=r)Updata(L(t),l,r,val);</div><div class=\"line\">\telse&#123;</div><div class=\"line\">\t\tUpdata(L(t),l,mid,val);</div><div class=\"line\">\t\tUpdata(R(t),mid,r,val);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tLineTree[t].sum=LineTree[L(t)].sum+LineTree[R(t)].sum;</div><div class=\"line\">&#125;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tT=Get(); int k=1;</div><div class=\"line\">\twhile(T--)&#123;</div><div class=\"line\">\t\tN=Get();Q=Get();</div><div class=\"line\">\t\tBuild(1,0,N);</div><div class=\"line\">\t\tfor(int i=1;i&lt;=Q;i++)&#123;</div><div class=\"line\">\t\t\tx=Get(); y=Get(); z=Get();</div><div class=\"line\">\t\t\tUpdata(1,x-1,y,z);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tprintf(\"Case %d: The total value of the hook is %d.\\n\",k++,LineTree[1].sum);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(stdin);</div><div class=\"line\">\tfclose(stdout);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>蒟蒻我第一次打= =以前还没有接触过，终于会了染色问题了。</p>\n"}