{"tags":[{"name":"线段树","permalink":"http://lzy-foenix.github.io/tags/线段树/","url":"\\async\\tags\\线段树.json","count":3}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\03\\14\\coge-775-山海经.json","date":1426294769000,"path":{"year":2015,"month":3,"day":14,"name":"coge-775-山海经"},"title":"coge-775-山海经","permalink":"http://lzy-foenix.github.io/2015/03/14/coge-775-山海经/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>题目大意是查询给出区间的一段连续的子区间，使得这段子区间的和是整个区间最大的</p>\n<p>这需要一个比较巧妙的构思，我们赋予线段树节点这样几个属性：<br>l，r，lright，rleft，lmax，rmax，mleft，mright，max，sum<br>分别表示l-r这个区间的节点，从左到右的最大连续子区间的右边界，从右到左的最大连续子区间的左边界，从左边开始的连续子区间的最大值，从右开始的连续子区间的最大值，这个线段区间内最大连续子区间的左边界和右边界，这个线段区间内的连续子区间的最大值和总和。</p>\n<p>更新就是这样：<br>父节点的lmax等于MAX(左子节点的lmax, 左子节点的和+右子节点的lmax);<br>父节点的rmax等于MAX(右子节点的rmax, 右子节点的和+左子节点的rmax);<br>父节点的max等于MAX(左子节点的max, 右子节点的max, 左子节点的rmax+右子节点的lmax);<br>父节点的sum等于左子节点的sum + 右子节点的sum；</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;cstdio&gt;</div><div class=\"line\">#include &lt;cstdlib&gt;</div><div class=\"line\">#include &lt;cstring&gt;</div><div class=\"line\">#include &lt;set&gt;</div><div class=\"line\">#include &lt;cmath&gt;</div><div class=\"line\">#include &lt;queue&gt;</div><div class=\"line\">#include &lt;ctime&gt;</div><div class=\"line\">#include &lt;iostream&gt;</div><div class=\"line\">#include &lt;algorithm&gt;</div><div class=\"line\">#define L(x) (x&lt;&lt;1)</div><div class=\"line\">#define R(x) (x&lt;&lt;1|1)</div><div class=\"line\">using namespace std;</div><div class=\"line\">const int MAXN=100005;</div><div class=\"line\">struct node&#123;</div><div class=\"line\">\tint l,r,lmax,rmax,lright,rleft;</div><div class=\"line\">\tint max,sum,mleft,mright;</div><div class=\"line\">&#125;Seq_tree[MAXN&lt;&lt;2];</div><div class=\"line\">int N,Q,A[MAXN],x,y;</div><div class=\"line\">inline int Get()&#123;</div><div class=\"line\">\tint x;char ch; bool bo=false;</div><div class=\"line\">\twhile(!isdigit(ch=getchar()))if(ch=='-')break;</div><div class=\"line\">\tif(ch=='-')x=0,bo=true;</div><div class=\"line\">\telse x=ch-48;</div><div class=\"line\">\twhile(isdigit(ch=getchar()))x=x*10+ch-48;</div><div class=\"line\">\treturn bo==true? (-x):x;</div><div class=\"line\">&#125;</div><div class=\"line\">void Build(int root,int l,int r)&#123;</div><div class=\"line\">\tSeq_tree[root].l = l; Seq_tree[root].r = r;</div><div class=\"line\">\tif(l==r)&#123;</div><div class=\"line\">\t\tSeq_tree[root].lright = l; Seq_tree[root].rleft = r;</div><div class=\"line\">\t\tSeq_tree[root].lmax = A[l];Seq_tree[root].rmax = A[r];</div><div class=\"line\">\t\tSeq_tree[root].mleft = l;  Seq_tree[root].mright = r;</div><div class=\"line\">\t\tSeq_tree[root].sum = A[l]; Seq_tree[root].max = A[l];</div><div class=\"line\">\t\treturn;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tint mid=(l+r)&gt;&gt;1;</div><div class=\"line\">\tBuild(L(root),l,mid); Build(R(root),mid+1,r);</div><div class=\"line\">\t//更新lmax和其下标</div><div class=\"line\">\tSeq_tree[root].lmax = Seq_tree[L(root)].lmax;</div><div class=\"line\">\tSeq_tree[root].lright = Seq_tree[L(root)].lright;</div><div class=\"line\">\tif(Seq_tree[L(root)].sum + Seq_tree[R(root)].lmax &gt; Seq_tree[root].lmax)&#123;</div><div class=\"line\">\t\tSeq_tree[root].lmax = Seq_tree[L(root)].sum + Seq_tree[R(root)].lmax;</div><div class=\"line\">\t\tSeq_tree[root].lright = Seq_tree[R(root)].lright;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t//更新rmax和其下标</div><div class=\"line\">\tSeq_tree[root].rmax = Seq_tree[R(root)].rmax;</div><div class=\"line\">\tSeq_tree[root].rleft = Seq_tree[R(root)].rleft;</div><div class=\"line\">\tif(Seq_tree[R(root)].sum + Seq_tree[L(root)].rmax &gt; Seq_tree[root].rmax)&#123;</div><div class=\"line\">\t\tSeq_tree[root].rmax = Seq_tree[R(root)].sum + Seq_tree[L(root)].rmax;</div><div class=\"line\">\t\tSeq_tree[root].rleft = Seq_tree[L(root)].rleft;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t//更新sum</div><div class=\"line\">\tSeq_tree[root].sum = Seq_tree[L(root)].sum + Seq_tree[R(root)].sum;</div><div class=\"line\">\t//更新max 和 最大连续子区间的下标</div><div class=\"line\">\tSeq_tree[root].max = Seq_tree[L(root)].max;</div><div class=\"line\">\tSeq_tree[root].mleft = Seq_tree[L(root)].mleft;</div><div class=\"line\">\tSeq_tree[root].mright = Seq_tree[L(root)].mright;</div><div class=\"line\">\tif(Seq_tree[L(root)].rmax + Seq_tree[R(root)].lmax &gt; Seq_tree[root].max)&#123;</div><div class=\"line\">\t\tSeq_tree[root].max = Seq_tree[L(root)].rmax + Seq_tree[R(root)].lmax;</div><div class=\"line\">\t\tSeq_tree[root].mleft = Seq_tree[L(root)].rleft;</div><div class=\"line\">\t\tSeq_tree[root].mright = Seq_tree[R(root)].lright;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tif(Seq_tree[R(root)].max &gt; Seq_tree[root].max)&#123;</div><div class=\"line\">\t\tSeq_tree[root].max = Seq_tree[R(root)].max;</div><div class=\"line\">\t\tSeq_tree[root].mleft = Seq_tree[R(root)].mleft;</div><div class=\"line\">\t\tSeq_tree[root].mright = Seq_tree[R(root)].mright;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">node Query(int root,int l,int r)&#123;</div><div class=\"line\">\tif(Seq_tree[root].l==l &amp;&amp; Seq_tree[root].r==r)</div><div class=\"line\">\t\treturn Seq_tree[root];</div><div class=\"line\">\tint mid=(Seq_tree[root].l + Seq_tree[root].r)&gt;&gt;1;</div><div class=\"line\">\tif(mid &lt; l)return Query(R(root),l,r);</div><div class=\"line\">\telse if(mid &gt;= r)return Query(L(root),l,r);</div><div class=\"line\">\telse&#123;</div><div class=\"line\">\t\tnode ans1,ans2,ans;</div><div class=\"line\">\t\tans1 = Query(L(root),l,mid); ans2 = Query(R(root),mid+1,r);</div><div class=\"line\">\t\tans.l = ans1.l; ans.r = ans2.r;</div><div class=\"line\">\t\tans.lmax = ans1.lmax; ans.lright = ans1.lright;</div><div class=\"line\">\t\tif(ans1.sum + ans2.lmax &gt; ans.lmax)&#123;</div><div class=\"line\">\t\t\tans.lmax = ans1.sum + ans2.lmax;</div><div class=\"line\">\t\t\tans.lright = ans2.lright;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tans.rmax = ans2.rmax; ans.rleft = ans2.rleft;</div><div class=\"line\">\t\tif(ans2.sum + ans1.rmax &gt; ans.rmax)&#123;</div><div class=\"line\">\t\t\tans.rmax = ans2.sum + ans1.rmax;</div><div class=\"line\">\t\t\tans.rleft = ans1.rleft;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tans.sum = ans1.sum + ans2.sum;</div><div class=\"line\">\t\tans.max = ans1.max; ans.mleft = ans1.mleft; ans.mright = ans1.mright;</div><div class=\"line\">\t\tif(ans1.rmax + ans2.lmax &gt; ans.max)&#123;</div><div class=\"line\">\t\t\tans.max = ans1.rmax + ans2.lmax;</div><div class=\"line\">\t\t\tans.mleft = ans1.rleft;</div><div class=\"line\">\t\t\tans.mright = ans2.lright;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tif(ans2.max &gt; ans.max)&#123;</div><div class=\"line\">\t\t\tans.max = ans2.max;</div><div class=\"line\">\t\t\tans.mleft = ans2.mleft;</div><div class=\"line\">\t\t\tans.mright = ans2.mright;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn ans;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">\tN=Get();Q=Get();</div><div class=\"line\">\tfor(int i=1;i&lt;=N;i++)A[i]=Get();</div><div class=\"line\">\tBuild(1,1,N);</div><div class=\"line\">\tnode ans;</div><div class=\"line\">\tfor(int i=1;i&lt;=Q;i++)&#123;</div><div class=\"line\">\t\tx=Get(); y=Get();</div><div class=\"line\">\t\tans=Query(1,x,y);</div><div class=\"line\">\t\tprintf(\"%d %d %d\\n\",ans.mleft,ans.mright,ans.max);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(stdin);</div><div class=\"line\">\tfclose(stdout);</div><div class=\"line\">\treturn 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>好巧妙的构造方法，涨姿势了</p>\n"}