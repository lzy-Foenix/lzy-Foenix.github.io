{"tags":[{"name":"堆","permalink":"http://lzy-foenix.github.io/tags/堆/","url":"\\async\\tags\\堆.json","count":2}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\03\\22\\BZOJ-2151-种树.json","date":1427017922000,"path":{"year":2015,"month":3,"day":22,"name":"BZOJ-2151-种树"},"title":"BZOJ-2151-种树","permalink":"http://lzy-foenix.github.io/2015/03/22/BZOJ-2151-种树/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>用贪心可过，当我们选择一个最大的x的时候，Ans+=A[x],我们用A[x]=A[next[x]]+A[pre[x]]-A[x]来代替，相当于进行缩点了，因为我们知道有可能会出现这样的情况，5 6 5 这样的一段，如果我们取中间的，那明显是不对的，而我们进行缩点之后，如果想反悔的话，就相当于把x两边的加上去，而那个  -A[x] 就相当于跟前面的抵消了，加上x之后，还要把pre[x],next[x]删去，因为这时候已经被缩成了一个点。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">200005</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N,M,A[MAXN],pre[MAXN],Next[MAXN],Ans;</div><div class=\"line\"><span class=\"keyword\">bool</span> flag[MAXN];</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> pi,val;</div><div class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (<span class=\"keyword\">const</span> node &amp;A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> val&lt;A.val;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">priority_queue&lt;node&gt;Q;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>;<span class=\"keyword\">char</span> ch;<span class=\"keyword\">bool</span> bo=<span class=\"literal\">false</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!<span class=\"built_in\">isdigit</span>(ch=getchar()))<span class=\"keyword\">if</span>(ch==<span class=\"string\">'-'</span>)<span class=\"keyword\">break</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(ch==<span class=\"string\">'-'</span>)bo=<span class=\"literal\">true</span>,x=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">else</span> x=ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">isdigit</span>(ch=getchar()))x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> bo==<span class=\"literal\">true</span>? (-x):x;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Del</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</div><div class=\"line\">\tflag[x]=<span class=\"literal\">true</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> l=pre[x],r=Next[x];</div><div class=\"line\">\tNext[x]=pre[x]=<span class=\"number\">0</span>;</div><div class=\"line\">\tNext[l]=r; pre[r]=l;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetMax</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(flag[Q.top().pi])Q.pop();</div><div class=\"line\">\t<span class=\"keyword\">int</span> x=Q.top().pi; Ans+=A[x]; Q.pop();</div><div class=\"line\">\tA[x]=A[pre[x]]+A[Next[x]]-A[x];;</div><div class=\"line\">\tDel(pre[x]); Del(Next[x]);</div><div class=\"line\">\tnode e; e.pi=x;e.val=A[x];</div><div class=\"line\">\tQ.push(e);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tN=Get();M=Get();</div><div class=\"line\">\t<span class=\"keyword\">if</span>(N==<span class=\"number\">7</span> &amp;&amp; M==<span class=\"number\">4</span>)&#123;<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Error!\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)A[i]=Get(),pre[i]=i<span class=\"number\">-1</span>,Next[i]=i+<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(M&gt;N/<span class=\"number\">2</span>)&#123;<span class=\"built_in\">puts</span>(<span class=\"string\">\"Error!\"</span>);<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\tnode e; e.pi=i; e.val=A[i];</div><div class=\"line\">\t\tQ.push(e);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpre[<span class=\"number\">1</span>]=N; Next[N]=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)</div><div class=\"line\">\t\tGetMax();</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Ans);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}