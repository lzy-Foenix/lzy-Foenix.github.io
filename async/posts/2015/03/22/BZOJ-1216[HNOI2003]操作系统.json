{"tags":[{"name":"堆","permalink":"http://lzy-foenix.github.io/tags/堆/","url":"\\async\\tags\\堆.json","count":2}],"categories":[{"name":"数据结构","permalink":"http://lzy-foenix.github.io/categories/数据结构/","url":"\\async\\categories\\数据结构.json","count":18}],"url":"\\async\\posts\\2015\\03\\22\\BZOJ-1216[HNOI2003]操作系统.json","date":1427006909000,"path":{"year":2015,"month":3,"day":22,"name":"BZOJ-1216[HNOI2003]操作系统"},"title":"BZOJ-1216[HNOI2003]操作系统","permalink":"http://lzy-foenix.github.io/2015/03/22/BZOJ-1216[HNOI2003]操作系统/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>用堆来维护,记录最后时间</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">300005</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N=<span class=\"number\">1</span>,nowtime,lasttime;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> pi,arrtime,needtime,pri;</div><div class=\"line\">\t<span class=\"keyword\">bool</span> flag;</div><div class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (<span class=\"keyword\">const</span> node &amp;A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> pri==A.pri? arrtime&gt;A.arrtime:pri&lt;A.pri;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;New,head;</div><div class=\"line\">priority_queue&lt;node&gt;P;</div><div class=\"line\"><span class=\"keyword\">int</span> last,remain;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d%d\"</span>,&amp;New.pi,&amp;New.arrtime,&amp;New.needtime,&amp;New.pri))&#123;</div><div class=\"line\">\t\tremain=New.arrtime-last;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(!P.empty())&#123;</div><div class=\"line\">\t\t\thead=P.top();P.pop();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(head.needtime&lt;=remain)&#123;</div><div class=\"line\">\t\t\t\tremain-=head.needtime;</div><div class=\"line\">\t\t\t\tlast+=head.needtime;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d\\n\"</span>,head.pi,last);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\thead.needtime-=remain;</div><div class=\"line\">\t\t\t\tP.push(head);</div><div class=\"line\">\t\t\t\tlast+=remain;</div><div class=\"line\">\t\t\t\tremain=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tlast+=remain;</div><div class=\"line\">\t\tP.push(New);N++;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!P.empty())&#123;</div><div class=\"line\">\t\thead=P.top(); P.pop();</div><div class=\"line\">\t\tlast+=head.needtime;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d\\n\"</span>,head.pi,last);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}