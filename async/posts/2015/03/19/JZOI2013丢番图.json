{"tags":[{"name":"分解质因子","permalink":"http://lzy-foenix.github.io/tags/分解质因子/","url":"\\async\\tags\\分解质因子.json","count":1}],"categories":[{"name":"数学","permalink":"http://lzy-foenix.github.io/categories/数学/","url":"\\async\\categories\\数学.json","count":24}],"url":"\\async\\posts\\2015\\03\\19\\JZOI2013丢番图.json","date":1426750023000,"path":{"year":2015,"month":3,"day":19,"name":"JZOI2013丢番图"},"title":"JZOI2013丢番图","permalink":"http://lzy-foenix.github.io/2015/03/19/JZOI2013丢番图/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>一开始毫无头绪，然后用解决数学问题的最好办法，打表找规律，然后发现有的数的答案比较接近他的因数个数，然后在把一个数的因数写出来，发现答案居然是这些因数中gcd=1的对数，然后就可以了，但是要注意数组一定要开大点，被坑了一个点。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</div><div class=\"line\">LL N,Tmp[<span class=\"number\">10000</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">Gcd</span><span class=\"params\">(LL a,LL b)</span></span>&#123;<span class=\"keyword\">return</span> b==<span class=\"number\">0</span>? a:Gcd(b,a%b);&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">(LL K)</span></span>&#123;</div><div class=\"line\">\tLL t=<span class=\"built_in\">sqrt</span>(K);</div><div class=\"line\">\tTmp[<span class=\"number\">0</span>]=<span class=\"number\">2</span>; Tmp[<span class=\"number\">1</span>]=<span class=\"number\">1</span>; Tmp[<span class=\"number\">2</span>]=K;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(LL i=<span class=\"number\">2</span>;i&lt;=t;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(K%i==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\tTmp[++Tmp[<span class=\"number\">0</span>]]=i;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i*i!=K)Tmp[++Tmp[<span class=\"number\">0</span>]]=K/i;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tLL ans=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=Tmp[<span class=\"number\">0</span>];i++)</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&lt;=Tmp[<span class=\"number\">0</span>];j++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Gcd(Tmp[i],Tmp[j])==<span class=\"number\">1</span>)ans++;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;N);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(N==<span class=\"number\">1</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">\t<span class=\"keyword\">else</span> work(N);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}