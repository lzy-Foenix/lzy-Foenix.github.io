{"tags":[{"name":"矩阵快速幂","permalink":"http://lzy-foenix.github.io/tags/矩阵快速幂/","url":"\\async\\tags\\矩阵快速幂.json","count":3}],"categories":[{"name":"矩阵","permalink":"http://lzy-foenix.github.io/categories/矩阵/","url":"\\async\\categories\\矩阵.json","count":3}],"url":"\\async\\posts\\2015\\03\\19\\JSOI2013美丽家园.json","date":1426750049000,"path":{"year":2015,"month":3,"day":19,"name":"JSOI2013美丽家园"},"title":"JSOI2013美丽家园","permalink":"http://lzy-foenix.github.io/2015/03/19/JSOI2013美丽家园/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>这道题，太伤心了，居然没有想到在矩阵中套dp，归根结底还是矩阵的题做的太少，尤其是dp用矩阵优化类型的。恩，这就是在矩阵中套状压dp，先把所有的状态处理出来，然后用a[i][j]=1，表示两行中i和j状态是可以的,然后，这是初始矩阵，然后让矩阵自乘N-1次。最后把矩阵中的所有的数都加起来，就是答案。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> M,P,g[<span class=\"number\">35</span>],t1[<span class=\"number\">11</span>],t2[<span class=\"number\">11</span>];</div><div class=\"line\"><span class=\"keyword\">char</span> ch[<span class=\"number\">105</span>];</div><div class=\"line\"><span class=\"keyword\">struct</span> Martix&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">35</span>][<span class=\"number\">35</span>];</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=g[<span class=\"number\">0</span>];i++)a[i][i]=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Judge</span><span class=\"params\">(<span class=\"keyword\">int</span> w1,<span class=\"keyword\">int</span> w2)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">memset</span>(t1,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(t1));<span class=\"built_in\">memset</span>(t2,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(t2));</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)</div><div class=\"line\">\t\t\tt1[i]=((w1&gt;&gt;(i<span class=\"number\">-1</span>))&amp;<span class=\"number\">1</span>),t2[i]=((w2&gt;&gt;(i<span class=\"number\">-1</span>))&amp;<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=M;i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> tmp=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t\ttmp+=t1[i]+t2[i]+t1[i<span class=\"number\">-1</span>]+t2[i<span class=\"number\">-1</span>];</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(tmp==<span class=\"number\">0</span> || tmp==<span class=\"number\">4</span>)<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Build</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=g[<span class=\"number\">0</span>];i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];j++)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(Judge(g[i],g[j]))a[g[i]+<span class=\"number\">1</span>][g[j]+<span class=\"number\">1</span>]++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tMartix <span class=\"keyword\">operator</span> * (<span class=\"keyword\">const</span> Martix A)<span class=\"keyword\">const</span>&#123;</div><div class=\"line\">\t\tMartix res; res.clear();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>;k&lt;=g[<span class=\"number\">0</span>];k++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=g[<span class=\"number\">0</span>];i++)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];j++)</div><div class=\"line\">\t\t\t\t\tres.a[i][j]+=(A.a[i][k]%P*a[k][j]%P)%P,res.a[i][j]%=P;;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=g[<span class=\"number\">0</span>];i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];j++)<span class=\"built_in\">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class=\"string\">\" \"</span>;</div><div class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Printans</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> Ans=<span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=g[<span class=\"number\">0</span>];i++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=g[<span class=\"number\">0</span>];j++)</div><div class=\"line\">\t\t\t\tAns+=(a[i][j]%P),Ans%=P;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Ans);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;T,ans;</div><div class=\"line\"><span class=\"keyword\">struct</span> node&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">105</span>],l;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</div><div class=\"line\">\t\tl=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=l;i++)<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</div><div class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">SPJ1</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(l&gt;<span class=\"number\">1</span>)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a[l]!=<span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">SPJ2</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(a[<span class=\"number\">1</span>]&amp;<span class=\"number\">1</span>)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Left</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=l;i&gt;=<span class=\"number\">1</span>;i--)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i&gt;<span class=\"number\">1</span>) a[i<span class=\"number\">-1</span>]+=(a[i]%<span class=\"number\">2</span>)*<span class=\"number\">10</span>;</div><div class=\"line\">\t\t\ta[i]&gt;&gt;=<span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(l&gt;<span class=\"number\">1</span>&amp;&amp;a[l]==<span class=\"number\">0</span>) l--;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Jian</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\ta[<span class=\"number\">1</span>]--;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=l;i++)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[i]&lt;<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\ta[i]+=<span class=\"number\">10</span>;</div><div class=\"line\">\t\t\t\ta[i+<span class=\"number\">1</span>]--;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(a[l]==<span class=\"number\">0</span> &amp;&amp; l)l--;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;N;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> w)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(x&gt;M)g[++g[<span class=\"number\">0</span>]]=w;</div><div class=\"line\">\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\tDFS(x+<span class=\"number\">1</span>,w);</div><div class=\"line\">\t\tDFS(x+<span class=\"number\">1</span>,w|<span class=\"number\">1</span>&lt;&lt;(x<span class=\"number\">-1</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Quick_pow</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tans.clear(); ans.init();</div><div class=\"line\">\tN.Jian();</div><div class=\"line\">\t<span class=\"keyword\">while</span>(N.SPJ1())&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(N.SPJ2())ans=ans*T;</div><div class=\"line\">\t\tT=T*T;</div><div class=\"line\">\t\tN.Left();</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"built_in\">strlen</span>(ch); N.l=l;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=l;i++)</div><div class=\"line\">\t\tN.a[i]=ch[l-i]-<span class=\"string\">'0'</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s%d%d\"</span>,ch,&amp;M,&amp;P);</div><div class=\"line\">\tInit();</div><div class=\"line\">\tDFS(<span class=\"number\">1</span>,<span class=\"number\">0</span>);</div><div class=\"line\">\tT.Build();</div><div class=\"line\">\tQuick_pow();</div><div class=\"line\">\tans.Printans();</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}