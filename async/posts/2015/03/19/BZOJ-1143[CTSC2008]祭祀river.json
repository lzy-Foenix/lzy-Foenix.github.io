{"tags":[{"name":"二分图","permalink":"http://lzy-foenix.github.io/tags/二分图/","url":"\\async\\tags\\二分图.json","count":3}],"categories":[{"name":"图论","permalink":"http://lzy-foenix.github.io/categories/图论/","url":"\\async\\categories\\图论.json","count":19}],"url":"\\async\\posts\\2015\\03\\19\\BZOJ-1143[CTSC2008]祭祀river.json","date":1426771907000,"path":{"year":2015,"month":3,"day":19,"name":"BZOJ-1143[CTSC2008]祭祀river"},"title":"BZOJ-1143[CTSC2008]祭祀river","permalink":"http://lzy-foenix.github.io/2015/03/19/BZOJ-1143[CTSC2008]祭祀river/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解:\"></a>题解:</h3><p>一开始理解错题意了，以为就是拓扑排序，然后找出度为0的点，然后才发现是错的，仔细读题目的话，才会发现，是所有选择出来的祭祀点是不可以两两联通的，那么也就是说在这张图中找点的最大独立集，点的最大独立集就是总的点数减去最大匹配。还有要注意的地方就是，要判断连通性，就是floyd判断连通性，因为不直接连通的点可能会间接连通。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码:\"></a>代码:</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">105</span>,MAXM=<span class=\"number\">1005</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N,M,ans,pre[MAXN],A[MAXN][MAXN];</div><div class=\"line\"><span class=\"keyword\">bool</span> flag[MAXN];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> now)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(!A[now][i])<span class=\"keyword\">continue</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(!flag[i])&#123;</div><div class=\"line\">\t\t\tflag[i]=<span class=\"literal\">true</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!pre[i] || find(pre[i]))&#123;</div><div class=\"line\">\t\t\t\tpre[i]=now; <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;N,&amp;M);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x,y;</div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y); A[x][y]=<span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>;k&lt;=N;k++)</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=N;j++)</div><div class=\"line\">\t\t\t\tA[i][j] |= A[i][k]&amp;A[k][j];</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">memset</span>(flag,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(flag));</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(find(i))ans++;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,N-ans);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}