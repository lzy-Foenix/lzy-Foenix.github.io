{"tags":[{"name":"一般动规和递推","permalink":"http://lzy-foenix.github.io/tags/一般动规和递推/","url":"\\async\\tags\\一般动规和递推.json","count":4}],"categories":[{"name":"动态规划","permalink":"http://lzy-foenix.github.io/categories/动态规划/","url":"\\async\\categories\\动态规划.json","count":11}],"url":"\\async\\posts\\2015\\03\\17\\BZOJ-1207[HNOI2004]打鼹鼠.json","date":1426596050000,"path":{"year":2015,"month":3,"day":17,"name":"BZOJ-1207[HNOI2004]打鼹鼠"},"title":"BZOJ-1207[HNOI2004]打鼹鼠","permalink":"http://lzy-foenix.github.io/2015/03/17/BZOJ-1207[HNOI2004]打鼹鼠/","content":"<hr>\n<a id=\"more\"></a>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><p>定义f[i]为前i个鼹鼠最多能打多少个，那么转移方程就是f[i]=max(f[i],f[j]+1),{1 &lt;= j &lt; i}。最后输出1到M的最大值加1。</p>\n<h3 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;set&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;ctime&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MAXN=<span class=\"number\">10005</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> N,M,f[MAXN];</div><div class=\"line\"><span class=\"keyword\">int</span> Time[MAXN],X[MAXN],Y[MAXN];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Get</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> x;<span class=\"keyword\">char</span> ch;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(!<span class=\"built_in\">isdigit</span>(ch=getchar()));</div><div class=\"line\">\tx=ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">isdigit</span>(ch=getchar()))x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;</div><div class=\"line\">\t<span class=\"keyword\">return</span> x;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">ABS</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;<span class=\"keyword\">return</span> x&gt;<span class=\"number\">0</span>? x:(-x);&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\tfreopen(<span class=\"string\">\"mole.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfreopen(<span class=\"string\">\"mole.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;N,&amp;M);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)Time[i]=Get(),X[i]=Get(),Y[i]=Get();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;i;j++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Time[i]-Time[j]&gt;=ABS(X[i]-X[j])+ABS(Y[i]-Y[j]))</div><div class=\"line\">\t\t\t\tf[i]=max(f[i],f[j]+<span class=\"number\">1</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> Max=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=M;i++)</div><div class=\"line\">\t\tMax=Max&gt;f[i]? Max:f[i];</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,Max+<span class=\"number\">1</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>显然这样的话是O(m^2)的，最大的数据0.7s跑完，那么我们需要一些优化，一般来说二分是可以的，但是这个显然是不可以二分的，我们需要一些特殊的技巧（&gt;_&lt;）<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10005</span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> n,m,ans;</div><div class=\"line\"><span class=\"keyword\">int</span> f[N],t[N],x[N],y[N],mx[N];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;\t</div><div class=\"line\">\tfreopen(<span class=\"string\">\"mole.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</div><div class=\"line\">\tfreopen(<span class=\"string\">\"mole.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;t[i],&amp;x[i],&amp;y[i]);</div><div class=\"line\">\tf[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;mx[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=m;i++)&#123;</div><div class=\"line\">\t\tf[i]=<span class=\"number\">1</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">1</span>;j--)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mx[j]+<span class=\"number\">1</span>&lt;=f[i])<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(f[j]+<span class=\"number\">1</span>&gt;f[i])</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">abs</span>(x[i]-x[j])+<span class=\"built_in\">abs</span>(y[i]-y[j])&lt;=t[i]-t[j])</div><div class=\"line\">\t\t\t\tf[i]=f[j]+<span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tmx[i]=max(f[i],mx[i<span class=\"number\">-1</span>]);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(f[i]&gt;ans)ans=f[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,ans);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}